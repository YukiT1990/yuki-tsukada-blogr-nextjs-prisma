webpackHotUpdate_N_E("pages/index",{

/***/ "./components/Header.tsx":
/*!*******************************!*\
  !*** ./components/Header.tsx ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/router */ \"./node_modules/next/dist/client/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_auth_client__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next-auth/client */ \"./node_modules/next-auth/client.js\");\n/* harmony import */ var next_auth_client__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_auth_client__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _material_ui_icons__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @material-ui/icons */ \"./node_modules/@material-ui/icons/esm/index.js\");\n\n\n\n\nvar _this = undefined,\n    _jsxFileName = \"/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx\",\n    _s = $RefreshSig$();\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement;\n\n\n\n\n\n\nvar Header = function Header() {\n  _s();\n\n  var router = Object(next_router__WEBPACK_IMPORTED_MODULE_6__[\"useRouter\"])();\n\n  var isActive = function isActive(pathname) {\n    return router.pathname === pathname;\n  };\n\n  var _useSession = Object(next_auth_client__WEBPACK_IMPORTED_MODULE_7__[\"useSession\"])(),\n      _useSession2 = Object(_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_useSession, 2),\n      session = _useSession2[0],\n      loading = _useSession2[1];\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(false),\n      searching = _useState[0],\n      setSearching = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])(\"\"),\n      searchKeyword = _useState2[0],\n      setSearchKeyword = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])([]),\n      resultUsers = _useState3[0],\n      setResultUsers = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useState\"])([]),\n      resultPosts = _useState4[0],\n      setResultPosts = _useState4[1];\n\n  Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useEffect\"])(function () {\n    console.log(\"reset keyword\");\n    setSearching(false);\n    setSearchKeyword(\"\");\n  }, [router.pathname]); // console.log(\"router.pathname: \" + router.pathname);\n  // useEffect(() => {\n  //   if (searchKeyword != \"\") {\n  //     const resultUsers = async () => {\n  //       await prisma.user.findMany({\n  //         where: {\n  //           name: {\n  //             contains: searchKeyword,\n  //           },\n  //         },\n  //       });\n  //     };\n  //     console.log(\"resultUsers: \" + resultUsers);\n  //     const resultPosts = async () => {\n  //       await prisma.post.findMany({\n  //         where: {\n  //           AND: {\n  //             title: {\n  //               contains: searchKeyword,\n  //             },\n  //             content: {\n  //               contains: searchKeyword,\n  //             },\n  //           },\n  //         },\n  //       });\n  //     };\n  //     console.log(\"resultPosts: \" + resultPosts);\n  //   } else {\n  //     setResultUsers([]);\n  //     setResultPosts([]);\n  //   }\n  // }, [searchKeyword]);\n\n  var submitData = /*#__PURE__*/function () {\n    var _ref = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(e) {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.prev = 1;\n              _context.next = 4;\n              return next_router__WEBPACK_IMPORTED_MODULE_6___default.a.push(\"/search/\".concat(searchKeyword));\n\n            case 4:\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](1);\n              console.error(_context.t0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 6]]);\n    }));\n\n    return function submitData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var left = __jsx(\"div\", {\n    className: \"jsx-639611057\" + \" \" + \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_5___default.a, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    \"data-active\": isActive(\"/\"),\n    className: \"jsx-639611057\" + \" \" + \"bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Feed\")), __jsx(\"a\", {\n    onClick: function onClick() {\n      return setSearching(!searching);\n    },\n    className: \"jsx-639611057\" + \" \" + \"search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(_material_ui_icons__WEBPACK_IMPORTED_MODULE_8__[\"Search\"], {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a, {\n    id: \"639611057\",\n    __self: _this\n  }, \".bold.jsx-639611057{font-weight:bold;}a.jsx-639611057{-webkit-text-decoration:none;text-decoration:none;color:#000;display:inline-block;}.left.jsx-639611057 a[data-active=\\\"true\\\"].jsx-639611057{color:gray;}a.jsx-639611057+a.jsx-639611057{margin-left:1rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95dWtpLnQvRGVza3RvcC9OZXh0SlNQcmFjdGljZS9ibG9nci1uZXh0anMtcHJpc21hL2NvbXBvbmVudHMvSGVhZGVyLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrRmtCLEFBRzRCLEFBSUksQUFNVixBQUlNLFdBSG5CLE1BVkEsQUFjQSxpQ0FWYSxXQUNVLHFCQUN2QiIsImZpbGUiOiIvVXNlcnMveXVraS50L0Rlc2t0b3AvTmV4dEpTUHJhY3RpY2UvYmxvZ3ItbmV4dGpzLXByaXNtYS9jb21wb25lbnRzL0hlYWRlci50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xuaW1wb3J0IFJvdXRlciwgeyB1c2VSb3V0ZXIgfSBmcm9tIFwibmV4dC9yb3V0ZXJcIjtcbmltcG9ydCB7IHNpZ25PdXQsIHVzZVNlc3Npb24gfSBmcm9tIFwibmV4dC1hdXRoL2NsaWVudFwiO1xuaW1wb3J0IHsgU2VhcmNoIH0gZnJvbSBcIkBtYXRlcmlhbC11aS9pY29uc1wiO1xuaW1wb3J0IHByaXNtYSBmcm9tIFwiLi4vbGliL3ByaXNtYVwiO1xuaW1wb3J0IFBvc3QsIHsgUG9zdFByb3BzIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9zdFwiO1xuaW1wb3J0IHsgR2V0U2VydmVyU2lkZVByb3BzIH0gZnJvbSBcIm5leHRcIjtcblxuY29uc3QgSGVhZGVyOiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG4gIGNvbnN0IGlzQWN0aXZlOiAocGF0aG5hbWU6IHN0cmluZykgPT4gYm9vbGVhbiA9IChwYXRobmFtZSkgPT5cbiAgICByb3V0ZXIucGF0aG5hbWUgPT09IHBhdGhuYW1lO1xuXG4gIGNvbnN0IFtzZXNzaW9uLCBsb2FkaW5nXSA9IHVzZVNlc3Npb24oKTtcbiAgY29uc3QgW3NlYXJjaGluZywgc2V0U2VhcmNoaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3NlYXJjaEtleXdvcmQsIHNldFNlYXJjaEtleXdvcmRdID0gdXNlU3RhdGUoXCJcIik7XG4gIGNvbnN0IFtyZXN1bHRVc2Vycywgc2V0UmVzdWx0VXNlcnNdID0gdXNlU3RhdGUoW10pO1xuICBjb25zdCBbcmVzdWx0UG9zdHMsIHNldFJlc3VsdFBvc3RzXSA9IHVzZVN0YXRlKFtdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwicmVzZXQga2V5d29yZFwiKTtcbiAgICBzZXRTZWFyY2hpbmcoZmFsc2UpO1xuICAgIHNldFNlYXJjaEtleXdvcmQoXCJcIik7XG4gIH0sIFtyb3V0ZXIucGF0aG5hbWVdKTtcblxuICAvLyBjb25zb2xlLmxvZyhcInJvdXRlci5wYXRobmFtZTogXCIgKyByb3V0ZXIucGF0aG5hbWUpO1xuXG4gIC8vIHVzZUVmZmVjdCgoKSA9PiB7XG4gIC8vICAgaWYgKHNlYXJjaEtleXdvcmQgIT0gXCJcIikge1xuICAvLyAgICAgY29uc3QgcmVzdWx0VXNlcnMgPSBhc3luYyAoKSA9PiB7XG4gIC8vICAgICAgIGF3YWl0IHByaXNtYS51c2VyLmZpbmRNYW55KHtcbiAgLy8gICAgICAgICB3aGVyZToge1xuICAvLyAgICAgICAgICAgbmFtZToge1xuICAvLyAgICAgICAgICAgICBjb250YWluczogc2VhcmNoS2V5d29yZCxcbiAgLy8gICAgICAgICAgIH0sXG4gIC8vICAgICAgICAgfSxcbiAgLy8gICAgICAgfSk7XG4gIC8vICAgICB9O1xuICAvLyAgICAgY29uc29sZS5sb2coXCJyZXN1bHRVc2VyczogXCIgKyByZXN1bHRVc2Vycyk7XG4gIC8vICAgICBjb25zdCByZXN1bHRQb3N0cyA9IGFzeW5jICgpID0+IHtcbiAgLy8gICAgICAgYXdhaXQgcHJpc21hLnBvc3QuZmluZE1hbnkoe1xuICAvLyAgICAgICAgIHdoZXJlOiB7XG4gIC8vICAgICAgICAgICBBTkQ6IHtcbiAgLy8gICAgICAgICAgICAgdGl0bGU6IHtcbiAgLy8gICAgICAgICAgICAgICBjb250YWluczogc2VhcmNoS2V5d29yZCxcbiAgLy8gICAgICAgICAgICAgfSxcbiAgLy8gICAgICAgICAgICAgY29udGVudDoge1xuICAvLyAgICAgICAgICAgICAgIGNvbnRhaW5zOiBzZWFyY2hLZXl3b3JkLFxuICAvLyAgICAgICAgICAgICB9LFxuICAvLyAgICAgICAgICAgfSxcbiAgLy8gICAgICAgICB9LFxuICAvLyAgICAgICB9KTtcbiAgLy8gICAgIH07XG4gIC8vICAgICBjb25zb2xlLmxvZyhcInJlc3VsdFBvc3RzOiBcIiArIHJlc3VsdFBvc3RzKTtcbiAgLy8gICB9IGVsc2Uge1xuICAvLyAgICAgc2V0UmVzdWx0VXNlcnMoW10pO1xuICAvLyAgICAgc2V0UmVzdWx0UG9zdHMoW10pO1xuICAvLyAgIH1cbiAgLy8gfSwgW3NlYXJjaEtleXdvcmRdKTtcblxuICBjb25zdCBzdWJtaXREYXRhID0gYXN5bmMgKGU6IFJlYWN0LlN5bnRoZXRpY0V2ZW50KSA9PiB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCBSb3V0ZXIucHVzaChgL3NlYXJjaC8ke3NlYXJjaEtleXdvcmR9YCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgIH1cbiAgfTtcblxuICBsZXQgbGVmdCA9IChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImxlZnRcIj5cbiAgICAgIDxMaW5rIGhyZWY9XCIvXCI+XG4gICAgICAgIDxhIGNsYXNzTmFtZT1cImJvbGRcIiBkYXRhLWFjdGl2ZT17aXNBY3RpdmUoXCIvXCIpfT5cbiAgICAgICAgICBGZWVkXG4gICAgICAgIDwvYT5cbiAgICAgIDwvTGluaz5cblxuICAgICAgPGEgY2xhc3NOYW1lPVwic2VhcmNoXCIgb25DbGljaz17KCkgPT4gc2V0U2VhcmNoaW5nKCFzZWFyY2hpbmcpfT5cbiAgICAgICAgPFNlYXJjaCAvPlxuICAgICAgPC9hPlxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5ib2xkIHtcbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgfVxuXG4gICAgICAgIGEge1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIH1cblxuICAgICAgICAubGVmdCBhW2RhdGEtYWN0aXZlPVwidHJ1ZVwiXSB7XG4gICAgICAgICAgY29sb3I6IGdyYXk7XG4gICAgICAgIH1cblxuICAgICAgICBhICsgYSB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKTtcblxuICBsZXQgcmlnaHQgPSBudWxsO1xuXG4gIGlmIChsb2FkaW5nKSB7XG4gICAgbGVmdCA9IChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGVmdFwiPlxuICAgICAgICA8TGluayBocmVmPVwiL1wiPlxuICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImJvbGRcIiBkYXRhLWFjdGl2ZT17aXNBY3RpdmUoXCIvXCIpfT5cbiAgICAgICAgICAgIEZlZWRcbiAgICAgICAgICA8L2E+XG4gICAgICAgIDwvTGluaz5cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgIC5ib2xkIHtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGEge1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLmxlZnQgYVtkYXRhLWFjdGl2ZT1cInRydWVcIl0ge1xuICAgICAgICAgICAgY29sb3I6IGdyYXk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYSArIGEge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gICAgICAgICAgfVxuICAgICAgICBgfTwvc3R5bGU+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICAgIHJpZ2h0ID0gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJyaWdodFwiPlxuICAgICAgICA8cD5WYWxpZGF0aW5nIHNlc3Npb24gLi4uPC9wPlxuICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgLnJpZ2h0IHtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIGlmICghc2Vzc2lvbikge1xuICAgIHJpZ2h0ID0gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJyaWdodFwiPlxuICAgICAgICA8TGluayBocmVmPVwiL2FwaS9hdXRoL3NpZ25pblwiPlxuICAgICAgICAgIDxhIGRhdGEtYWN0aXZlPXtpc0FjdGl2ZShcIi9zaWdudXBcIil9PkxvZyBpbjwvYT5cbiAgICAgICAgPC9MaW5rPlxuICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgYSB7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICMwMGU2MDA7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYSArIGEge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLnJpZ2h0IHtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC5yaWdodCBhIHtcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICAgICAgICAgICAgcGFkZGluZzogMC41cmVtIDFyZW07XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgICAgfVxuICAgICAgICBgfTwvc3R5bGU+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG5cbiAgaWYgKHNlc3Npb24pIHtcbiAgICBsZWZ0ID0gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJsZWZ0XCI+XG4gICAgICAgIDxMaW5rIGhyZWY9XCIvXCI+XG4gICAgICAgICAgPGEgY2xhc3NOYW1lPVwiYm9sZFwiIGRhdGEtYWN0aXZlPXtpc0FjdGl2ZShcIi9cIil9PlxuICAgICAgICAgICAgRmVlZFxuICAgICAgICAgIDwvYT5cbiAgICAgICAgPC9MaW5rPlxuICAgICAgICA8TGluayBocmVmPVwiL2RyYWZ0c1wiPlxuICAgICAgICAgIDxhIGRhdGEtYWN0aXZlPXtpc0FjdGl2ZShcIi9kcmFmdHNcIil9Pk15IGRyYWZ0czwvYT5cbiAgICAgICAgPC9MaW5rPlxuXG4gICAgICAgIDxhIGNsYXNzTmFtZT1cInNlYXJjaFwiIG9uQ2xpY2s9eygpID0+IHNldFNlYXJjaGluZyghc2VhcmNoaW5nKX0+XG4gICAgICAgICAgPFNlYXJjaCAvPlxuICAgICAgICA8L2E+XG5cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgIC5ib2xkIHtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGEge1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLmxlZnQgYVtkYXRhLWFjdGl2ZT1cInRydWVcIl0ge1xuICAgICAgICAgICAgY29sb3I6IGdyYXk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYSArIGEge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gICAgICAgICAgfVxuICAgICAgICBgfTwvc3R5bGU+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICAgIHJpZ2h0ID0gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJyaWdodFwiPlxuICAgICAgICA8cD5cbiAgICAgICAgICB7c2Vzc2lvbi51c2VyLm5hbWV9ICh7c2Vzc2lvbi51c2VyLmVtYWlsfSlcbiAgICAgICAgPC9wPlxuICAgICAgICB7IXNlc3Npb24udXNlci5lbWFpbCAmJiAoXG4gICAgICAgICAgPExpbmsgaHJlZj1cIi91cGRhdGUtdXNlclwiPlxuICAgICAgICAgICAgPGJ1dHRvbj5cbiAgICAgICAgICAgICAgPGE+UmVnaXN0ZXIgRW1haWw8L2E+XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICA8L0xpbms+XG4gICAgICAgICl9XG4gICAgICAgIHtzZXNzaW9uLnVzZXIuZW1haWwgJiYgKFxuICAgICAgICAgIDw+XG4gICAgICAgICAgICA8TGluayBocmVmPVwiL3VwZGF0ZS11c2VyXCI+XG4gICAgICAgICAgICAgIDxidXR0b24+XG4gICAgICAgICAgICAgICAgPGE+VXBkYXRlIEVtYWlsPC9hPlxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvY3JlYXRlXCI+XG4gICAgICAgICAgICAgIDxidXR0b24+XG4gICAgICAgICAgICAgICAgPGE+TmV3IHBvc3Q8L2E+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgIDwvPlxuICAgICAgICApfVxuICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IHNpZ25PdXQoKX0+XG4gICAgICAgICAgPGE+TG9nIG91dDwvYT5cbiAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICBhIHtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgIGNvbG9yOiAjMDAwO1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHAge1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgZm9udC1zaXplOiAxM3B4O1xuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMXJlbTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBhICsgYSB7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMXJlbTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAucmlnaHQge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLnJpZ2h0IGEge1xuICAgICAgICAgICAgLyogYm9yZGVyOiAxcHggc29saWQgYmxhY2s7ICovXG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICBwYWRkaW5nOiAwcmVtIDFyZW07XG4gICAgICAgICAgICAvKiBib3JkZXItcmFkaXVzOiAzcHg7ICovXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYnV0dG9uIHtcbiAgICAgICAgICAgIC8qIGJvcmRlcjogbm9uZTsgKi9cbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogIzAwZTYwMDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwLjVyZW07XG4gICAgICAgICAgfVxuICAgICAgICBgfTwvc3R5bGU+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPG5hdj5cbiAgICAgICAge2xlZnR9XG4gICAgICAgIHtyaWdodH1cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgIG5hdiB7XG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgcGFkZGluZzogMnJlbTtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgfVxuICAgICAgICBgfTwvc3R5bGU+XG4gICAgICA8L25hdj5cbiAgICAgIHtzZWFyY2hpbmcgJiYgKFxuICAgICAgICA8PlxuICAgICAgICAgIDxmb3JtIG9uU3VibWl0PXtzdWJtaXREYXRhfT5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICBhdXRvRm9jdXNcbiAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRTZWFyY2hLZXl3b3JkKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJTZWFyY2ggZm9yIHVzZXJzIGFuZCBwb3N0cy5cIlxuICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgIHZhbHVlPXtzZWFyY2hLZXl3b3JkfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICBkaXNhYmxlZD17c2VhcmNoS2V5d29yZCA9PSBcIlwifVxuICAgICAgICAgICAgICB0eXBlPVwic3VibWl0XCJcbiAgICAgICAgICAgICAgdmFsdWU9XCJTZWFyY2hcIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L2Zvcm0+XG4gICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgaW5wdXRbdHlwZT1cInRleHRcIl0ge1xuICAgICAgICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICAgICAgICBwYWRkaW5nOiAwLjVyZW07XG4gICAgICAgICAgICAgIG1hcmdpbjogMC41cmVtIDA7XG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07XG4gICAgICAgICAgICAgIGJvcmRlcjogMC4xMjVyZW0gc29saWQgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogIzAwZTYwMDtcbiAgICAgICAgICAgICAgLyogYm9yZGVyOiAwOyAqL1xuICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICAgICAgICBwYWRkaW5nOiAxcmVtIDJyZW07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICA8Lz5cbiAgICAgICl9XG4gICAgPC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBIZWFkZXI7XG4iXX0= */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx */\"));\n\n  var right = null;\n\n  if (loading) {\n    left = __jsx(\"div\", {\n      className: \"jsx-1698293825\" + \" \" + \"left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_5___default.a, {\n      href: \"/\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      \"data-active\": isActive(\"/\"),\n      className: \"jsx-1698293825\" + \" \" + \"bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Feed\")), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a, {\n      id: \"1698293825\",\n      __self: _this\n    }, \".bold.jsx-1698293825{font-weight:bold;}a.jsx-1698293825{-webkit-text-decoration:none;text-decoration:none;color:#000;display:inline-block;}.left.jsx-1698293825 a[data-active=\\\"true\\\"].jsx-1698293825{color:gray;}a.jsx-1698293825+a.jsx-1698293825{margin-left:1rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx */\"));\n    right = __jsx(\"div\", {\n      className: \"jsx-2272693804\" + \" \" + \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      className: \"jsx-2272693804\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, \"Validating session ...\"), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a, {\n      id: \"2272693804\",\n      __self: _this\n    }, \".right.jsx-2272693804{margin-left:auto;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx */\"));\n  }\n\n  if (!session) {\n    right = __jsx(\"div\", {\n      className: \"jsx-1951211810\" + \" \" + \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_5___default.a, {\n      href: \"/api/auth/signin\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      \"data-active\": isActive(\"/signup\"),\n      className: \"jsx-1951211810\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, \"Log in\")), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a, {\n      id: \"1951211810\",\n      __self: _this\n    }, \"a.jsx-1951211810{-webkit-text-decoration:none;text-decoration:none;color:#000;display:inline-block;background:#00e600;}a.jsx-1951211810+a.jsx-1951211810{margin-left:1rem;}.right.jsx-1951211810{margin-left:auto;}.right.jsx-1951211810 a.jsx-1951211810{border:1px solid black;padding:0.5rem 1rem;border-radius:3px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx */\"));\n  }\n\n  if (session) {\n    left = __jsx(\"div\", {\n      className: \"jsx-1698293825\" + \" \" + \"left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_5___default.a, {\n      href: \"/\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      \"data-active\": isActive(\"/\"),\n      className: \"jsx-1698293825\" + \" \" + \"bold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, \"Feed\")), __jsx(next_link__WEBPACK_IMPORTED_MODULE_5___default.a, {\n      href: \"/drafts\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      \"data-active\": isActive(\"/drafts\"),\n      className: \"jsx-1698293825\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, \"My drafts\")), __jsx(\"a\", {\n      onClick: function onClick() {\n        return setSearching(!searching);\n      },\n      className: \"jsx-1698293825\" + \" \" + \"search\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, __jsx(_material_ui_icons__WEBPACK_IMPORTED_MODULE_8__[\"Search\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    })), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a, {\n      id: \"1698293825\",\n      __self: _this\n    }, \".bold.jsx-1698293825{font-weight:bold;}a.jsx-1698293825{-webkit-text-decoration:none;text-decoration:none;color:#000;display:inline-block;}.left.jsx-1698293825 a[data-active=\\\"true\\\"].jsx-1698293825{color:gray;}a.jsx-1698293825+a.jsx-1698293825{margin-left:1rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx */\"));\n    right = __jsx(\"div\", {\n      className: \"jsx-4126615624\" + \" \" + \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      className: \"jsx-4126615624\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }, session.user.name, \" (\", session.user.email, \")\"), !session.user.email && __jsx(next_link__WEBPACK_IMPORTED_MODULE_5___default.a, {\n      href: \"/update-user\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, __jsx(\"button\", {\n      className: \"jsx-4126615624\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-4126615624\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    }, \"Register Email\"))), session.user.email && __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(next_link__WEBPACK_IMPORTED_MODULE_5___default.a, {\n      href: \"/update-user\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      className: \"jsx-4126615624\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-4126615624\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, \"Update Email\"))), __jsx(next_link__WEBPACK_IMPORTED_MODULE_5___default.a, {\n      href: \"/create\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      className: \"jsx-4126615624\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-4126615624\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }, \"New post\")))), __jsx(\"button\", {\n      onClick: function onClick() {\n        return Object(next_auth_client__WEBPACK_IMPORTED_MODULE_7__[\"signOut\"])();\n      },\n      className: \"jsx-4126615624\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-4126615624\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }, \"Log out\")), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a, {\n      id: \"4126615624\",\n      __self: _this\n    }, \"a.jsx-4126615624{-webkit-text-decoration:none;text-decoration:none;color:#000;display:inline-block;}p.jsx-4126615624{display:inline-block;font-size:13px;padding-right:1rem;}a.jsx-4126615624+a.jsx-4126615624{margin-left:1rem;}.right.jsx-4126615624{margin-left:auto;}.right.jsx-4126615624 a.jsx-4126615624{border:none;padding:0rem 1rem;}button.jsx-4126615624{border:1px solid black;background:#00e600;border-radius:3px;margin-left:0.5rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95dWtpLnQvRGVza3RvcC9OZXh0SlNQcmFjdGljZS9ibG9nci1uZXh0anMtcHJpc21hL2NvbXBvbmVudHMvSGVhZGVyLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxUG9CLEFBR2tDLEFBTUEsQUFNSixBQUlBLEFBS0wsQUFPVyxZQU5MLEtBVHBCLEFBSUEsSUFWaUIsRUFzQkksT0FMckIsTUFoQnFCLE1Bc0JELFFBN0JQLEtBUWIsS0FzQnFCLENBN0JFLGtCQThCdkIsR0E3QkEiLCJmaWxlIjoiL1VzZXJzL3l1a2kudC9EZXNrdG9wL05leHRKU1ByYWN0aWNlL2Jsb2dyLW5leHRqcy1wcmlzbWEvY29tcG9uZW50cy9IZWFkZXIudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcbmltcG9ydCBSb3V0ZXIsIHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvcm91dGVyXCI7XG5pbXBvcnQgeyBzaWduT3V0LCB1c2VTZXNzaW9uIH0gZnJvbSBcIm5leHQtYXV0aC9jbGllbnRcIjtcbmltcG9ydCB7IFNlYXJjaCB9IGZyb20gXCJAbWF0ZXJpYWwtdWkvaWNvbnNcIjtcbmltcG9ydCBwcmlzbWEgZnJvbSBcIi4uL2xpYi9wcmlzbWFcIjtcbmltcG9ydCBQb3N0LCB7IFBvc3RQcm9wcyB9IGZyb20gXCIuLi9jb21wb25lbnRzL1Bvc3RcIjtcbmltcG9ydCB7IEdldFNlcnZlclNpZGVQcm9wcyB9IGZyb20gXCJuZXh0XCI7XG5cbmNvbnN0IEhlYWRlcjogUmVhY3QuRkMgPSAoKSA9PiB7XG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuICBjb25zdCBpc0FjdGl2ZTogKHBhdGhuYW1lOiBzdHJpbmcpID0+IGJvb2xlYW4gPSAocGF0aG5hbWUpID0+XG4gICAgcm91dGVyLnBhdGhuYW1lID09PSBwYXRobmFtZTtcblxuICBjb25zdCBbc2Vzc2lvbiwgbG9hZGluZ10gPSB1c2VTZXNzaW9uKCk7XG4gIGNvbnN0IFtzZWFyY2hpbmcsIHNldFNlYXJjaGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzZWFyY2hLZXl3b3JkLCBzZXRTZWFyY2hLZXl3b3JkXSA9IHVzZVN0YXRlKFwiXCIpO1xuICBjb25zdCBbcmVzdWx0VXNlcnMsIHNldFJlc3VsdFVzZXJzXSA9IHVzZVN0YXRlKFtdKTtcbiAgY29uc3QgW3Jlc3VsdFBvc3RzLCBzZXRSZXN1bHRQb3N0c10gPSB1c2VTdGF0ZShbXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhcInJlc2V0IGtleXdvcmRcIik7XG4gICAgc2V0U2VhcmNoaW5nKGZhbHNlKTtcbiAgICBzZXRTZWFyY2hLZXl3b3JkKFwiXCIpO1xuICB9LCBbcm91dGVyLnBhdGhuYW1lXSk7XG5cbiAgLy8gY29uc29sZS5sb2coXCJyb3V0ZXIucGF0aG5hbWU6IFwiICsgcm91dGVyLnBhdGhuYW1lKTtcblxuICAvLyB1c2VFZmZlY3QoKCkgPT4ge1xuICAvLyAgIGlmIChzZWFyY2hLZXl3b3JkICE9IFwiXCIpIHtcbiAgLy8gICAgIGNvbnN0IHJlc3VsdFVzZXJzID0gYXN5bmMgKCkgPT4ge1xuICAvLyAgICAgICBhd2FpdCBwcmlzbWEudXNlci5maW5kTWFueSh7XG4gIC8vICAgICAgICAgd2hlcmU6IHtcbiAgLy8gICAgICAgICAgIG5hbWU6IHtcbiAgLy8gICAgICAgICAgICAgY29udGFpbnM6IHNlYXJjaEtleXdvcmQsXG4gIC8vICAgICAgICAgICB9LFxuICAvLyAgICAgICAgIH0sXG4gIC8vICAgICAgIH0pO1xuICAvLyAgICAgfTtcbiAgLy8gICAgIGNvbnNvbGUubG9nKFwicmVzdWx0VXNlcnM6IFwiICsgcmVzdWx0VXNlcnMpO1xuICAvLyAgICAgY29uc3QgcmVzdWx0UG9zdHMgPSBhc3luYyAoKSA9PiB7XG4gIC8vICAgICAgIGF3YWl0IHByaXNtYS5wb3N0LmZpbmRNYW55KHtcbiAgLy8gICAgICAgICB3aGVyZToge1xuICAvLyAgICAgICAgICAgQU5EOiB7XG4gIC8vICAgICAgICAgICAgIHRpdGxlOiB7XG4gIC8vICAgICAgICAgICAgICAgY29udGFpbnM6IHNlYXJjaEtleXdvcmQsXG4gIC8vICAgICAgICAgICAgIH0sXG4gIC8vICAgICAgICAgICAgIGNvbnRlbnQ6IHtcbiAgLy8gICAgICAgICAgICAgICBjb250YWluczogc2VhcmNoS2V5d29yZCxcbiAgLy8gICAgICAgICAgICAgfSxcbiAgLy8gICAgICAgICAgIH0sXG4gIC8vICAgICAgICAgfSxcbiAgLy8gICAgICAgfSk7XG4gIC8vICAgICB9O1xuICAvLyAgICAgY29uc29sZS5sb2coXCJyZXN1bHRQb3N0czogXCIgKyByZXN1bHRQb3N0cyk7XG4gIC8vICAgfSBlbHNlIHtcbiAgLy8gICAgIHNldFJlc3VsdFVzZXJzKFtdKTtcbiAgLy8gICAgIHNldFJlc3VsdFBvc3RzKFtdKTtcbiAgLy8gICB9XG4gIC8vIH0sIFtzZWFyY2hLZXl3b3JkXSk7XG5cbiAgY29uc3Qgc3VibWl0RGF0YSA9IGFzeW5jIChlOiBSZWFjdC5TeW50aGV0aWNFdmVudCkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgUm91dGVyLnB1c2goYC9zZWFyY2gvJHtzZWFyY2hLZXl3b3JkfWApO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICB9XG4gIH07XG5cbiAgbGV0IGxlZnQgPSAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJsZWZ0XCI+XG4gICAgICA8TGluayBocmVmPVwiL1wiPlxuICAgICAgICA8YSBjbGFzc05hbWU9XCJib2xkXCIgZGF0YS1hY3RpdmU9e2lzQWN0aXZlKFwiL1wiKX0+XG4gICAgICAgICAgRmVlZFxuICAgICAgICA8L2E+XG4gICAgICA8L0xpbms+XG5cbiAgICAgIDxhIGNsYXNzTmFtZT1cInNlYXJjaFwiIG9uQ2xpY2s9eygpID0+IHNldFNlYXJjaGluZyghc2VhcmNoaW5nKX0+XG4gICAgICAgIDxTZWFyY2ggLz5cbiAgICAgIDwvYT5cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAuYm9sZCB7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIH1cblxuICAgICAgICBhIHtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB9XG5cbiAgICAgICAgLmxlZnQgYVtkYXRhLWFjdGl2ZT1cInRydWVcIl0ge1xuICAgICAgICAgIGNvbG9yOiBncmF5O1xuICAgICAgICB9XG5cbiAgICAgICAgYSArIGEge1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9kaXY+XG4gICk7XG5cbiAgbGV0IHJpZ2h0ID0gbnVsbDtcblxuICBpZiAobG9hZGluZykge1xuICAgIGxlZnQgPSAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImxlZnRcIj5cbiAgICAgICAgPExpbmsgaHJlZj1cIi9cIj5cbiAgICAgICAgICA8YSBjbGFzc05hbWU9XCJib2xkXCIgZGF0YS1hY3RpdmU9e2lzQWN0aXZlKFwiL1wiKX0+XG4gICAgICAgICAgICBGZWVkXG4gICAgICAgICAgPC9hPlxuICAgICAgICA8L0xpbms+XG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAuYm9sZCB7XG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBhIHtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgIGNvbG9yOiAjMDAwO1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC5sZWZ0IGFbZGF0YS1hY3RpdmU9XCJ0cnVlXCJdIHtcbiAgICAgICAgICAgIGNvbG9yOiBncmF5O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGEgKyBhIHtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgICByaWdodCA9IChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmlnaHRcIj5cbiAgICAgICAgPHA+VmFsaWRhdGluZyBzZXNzaW9uIC4uLjwvcD5cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgIC5yaWdodCB7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICAgICAgICB9XG4gICAgICAgIGB9PC9zdHlsZT5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cblxuICBpZiAoIXNlc3Npb24pIHtcbiAgICByaWdodCA9IChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmlnaHRcIj5cbiAgICAgICAgPExpbmsgaHJlZj1cIi9hcGkvYXV0aC9zaWduaW5cIj5cbiAgICAgICAgICA8YSBkYXRhLWFjdGl2ZT17aXNBY3RpdmUoXCIvc2lnbnVwXCIpfT5Mb2cgaW48L2E+XG4gICAgICAgIDwvTGluaz5cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgIGEge1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgY29sb3I6ICMwMDA7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMDBlNjAwO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGEgKyBhIHtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC5yaWdodCB7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAucmlnaHQgYSB7XG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgICAgICAgICAgIHBhZGRpbmc6IDAuNXJlbSAxcmVtO1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIGlmIChzZXNzaW9uKSB7XG4gICAgbGVmdCA9IChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGVmdFwiPlxuICAgICAgICA8TGluayBocmVmPVwiL1wiPlxuICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImJvbGRcIiBkYXRhLWFjdGl2ZT17aXNBY3RpdmUoXCIvXCIpfT5cbiAgICAgICAgICAgIEZlZWRcbiAgICAgICAgICA8L2E+XG4gICAgICAgIDwvTGluaz5cbiAgICAgICAgPExpbmsgaHJlZj1cIi9kcmFmdHNcIj5cbiAgICAgICAgICA8YSBkYXRhLWFjdGl2ZT17aXNBY3RpdmUoXCIvZHJhZnRzXCIpfT5NeSBkcmFmdHM8L2E+XG4gICAgICAgIDwvTGluaz5cblxuICAgICAgICA8YSBjbGFzc05hbWU9XCJzZWFyY2hcIiBvbkNsaWNrPXsoKSA9PiBzZXRTZWFyY2hpbmcoIXNlYXJjaGluZyl9PlxuICAgICAgICAgIDxTZWFyY2ggLz5cbiAgICAgICAgPC9hPlxuXG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAuYm9sZCB7XG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBhIHtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgIGNvbG9yOiAjMDAwO1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC5sZWZ0IGFbZGF0YS1hY3RpdmU9XCJ0cnVlXCJdIHtcbiAgICAgICAgICAgIGNvbG9yOiBncmF5O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGEgKyBhIHtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgICByaWdodCA9IChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmlnaHRcIj5cbiAgICAgICAgPHA+XG4gICAgICAgICAge3Nlc3Npb24udXNlci5uYW1lfSAoe3Nlc3Npb24udXNlci5lbWFpbH0pXG4gICAgICAgIDwvcD5cbiAgICAgICAgeyFzZXNzaW9uLnVzZXIuZW1haWwgJiYgKFxuICAgICAgICAgIDxMaW5rIGhyZWY9XCIvdXBkYXRlLXVzZXJcIj5cbiAgICAgICAgICAgIDxidXR0b24+XG4gICAgICAgICAgICAgIDxhPlJlZ2lzdGVyIEVtYWlsPC9hPlxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPC9MaW5rPlxuICAgICAgICApfVxuICAgICAgICB7c2Vzc2lvbi51c2VyLmVtYWlsICYmIChcbiAgICAgICAgICA8PlxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi91cGRhdGUtdXNlclwiPlxuICAgICAgICAgICAgICA8YnV0dG9uPlxuICAgICAgICAgICAgICAgIDxhPlVwZGF0ZSBFbWFpbDwvYT5cbiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICA8TGluayBocmVmPVwiL2NyZWF0ZVwiPlxuICAgICAgICAgICAgICA8YnV0dG9uPlxuICAgICAgICAgICAgICAgIDxhPk5ldyBwb3N0PC9hPlxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICA8Lz5cbiAgICAgICAgKX1cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBzaWduT3V0KCl9PlxuICAgICAgICAgIDxhPkxvZyBvdXQ8L2E+XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgYSB7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDFyZW07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgYSArIGEge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLnJpZ2h0IHtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC5yaWdodCBhIHtcbiAgICAgICAgICAgIC8qIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOyAqL1xuICAgICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgICAgcGFkZGluZzogMHJlbSAxcmVtO1xuICAgICAgICAgICAgLyogYm9yZGVyLXJhZGl1czogM3B4OyAqL1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGJ1dHRvbiB7XG4gICAgICAgICAgICAvKiBib3JkZXI6IG5vbmU7ICovXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICMwMGU2MDA7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMC41cmVtO1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxuYXY+XG4gICAgICAgIHtsZWZ0fVxuICAgICAgICB7cmlnaHR9XG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICBuYXYge1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDJyZW07XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC9uYXY+XG4gICAgICB7c2VhcmNoaW5nICYmIChcbiAgICAgICAgPD5cbiAgICAgICAgICA8Zm9ybSBvblN1Ym1pdD17c3VibWl0RGF0YX0+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgYXV0b0ZvY3VzXG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0U2VhcmNoS2V5d29yZChlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiU2VhcmNoIGZvciB1c2VycyBhbmQgcG9zdHMuXCJcbiAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICB2YWx1ZT17c2VhcmNoS2V5d29yZH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgZGlzYWJsZWQ9e3NlYXJjaEtleXdvcmQgPT0gXCJcIn1cbiAgICAgICAgICAgICAgdHlwZT1cInN1Ym1pdFwiXG4gICAgICAgICAgICAgIHZhbHVlPVwiU2VhcmNoXCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9mb3JtPlxuICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgIGlucHV0W3R5cGU9XCJ0ZXh0XCJdIHtcbiAgICAgICAgICAgICAgd2lkdGg6IDkwJTtcbiAgICAgICAgICAgICAgcGFkZGluZzogMC41cmVtO1xuICAgICAgICAgICAgICBtYXJnaW46IDAuNXJlbSAwO1xuICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xuICAgICAgICAgICAgICBib3JkZXI6IDAuMTI1cmVtIHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6ICMwMGU2MDA7XG4gICAgICAgICAgICAgIC8qIGJvcmRlcjogMDsgKi9cbiAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgICAgICAgICAgcGFkZGluZzogMXJlbSAycmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC8+XG4gICAgICApfVxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgSGVhZGVyO1xuIl19 */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx */\"));\n  }\n\n  return __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(\"nav\", {\n    className: \"jsx-1863952721\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }\n  }, left, right, __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a, {\n    id: \"1863952721\",\n    __self: _this\n  }, \"nav.jsx-1863952721{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding:2rem;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx */\")), searching && __jsx(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment, null, __jsx(\"form\", {\n    onSubmit: submitData,\n    className: \"jsx-1748687073\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    autoFocus: true,\n    onChange: function onChange(e) {\n      return setSearchKeyword(e.target.value);\n    },\n    placeholder: \"Search for users and posts.\",\n    type: \"text\",\n    value: searchKeyword,\n    className: \"jsx-1748687073\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    disabled: searchKeyword == \"\",\n    type: \"submit\",\n    value: \"Search\",\n    className: \"jsx-1748687073\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  })), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_3___default.a, {\n    id: \"1748687073\",\n    __self: _this\n  }, \"input[type=\\\"text\\\"].jsx-1748687073{width:90%;padding:0.5rem;margin:0.5rem 0;border-radius:0.25rem;border:0.125rem solid rgba(0,0,0,0.2);}input[type=\\\"submit\\\"].jsx-1748687073{background:#00e600;border:1px solid black;border-radius:3px;padding:1rem 2rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx */\")));\n};\n\n_s(Header, \"DDwC+hGg7ESUt+ieKy4J9wALABg=\", false, function () {\n  return [next_router__WEBPACK_IMPORTED_MODULE_6__[\"useRouter\"], next_auth_client__WEBPACK_IMPORTED_MODULE_7__[\"useSession\"]];\n});\n\n_c = Header;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Header.tsx\n");

/***/ })

})