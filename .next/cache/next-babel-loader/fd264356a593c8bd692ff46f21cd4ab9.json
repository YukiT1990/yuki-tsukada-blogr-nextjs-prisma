{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Post.tsx\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Router from \"next/router\";\nimport ReactMarkdown from \"react-markdown\";\n\nvar Post = function Post(_ref) {\n  var post = _ref.post;\n  var authorName = post.author ? post.author.name : \"Unknown author\";\n  return __jsx(\"div\", {\n    onClick: function onClick() {\n      return Router.push(\"/p/[id]\", \"/p/\".concat(post.id));\n    },\n    className: \"jsx-3212880845\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-3212880845\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, post.title), __jsx(\"small\", {\n    className: \"jsx-3212880845\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"By \", authorName), __jsx(ReactMarkdown, {\n    source: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), __jsx(\"small\", {\n    className: \"jsx-3212880845\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, post.createdAt), __jsx(_JSXStyle, {\n    id: \"3212880845\",\n    __self: _this\n  }, \"div.jsx-3212880845{color:inherit;padding:2rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95dWtpLnQvRGVza3RvcC9OZXh0SlNQcmFjdGljZS9ibG9nci1uZXh0anMtcHJpc21hL2NvbXBvbmVudHMvUG9zdC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUJrQixBQUd5QixjQUNELGFBQ2YiLCJmaWxlIjoiL1VzZXJzL3l1a2kudC9EZXNrdG9wL05leHRKU1ByYWN0aWNlL2Jsb2dyLW5leHRqcy1wcmlzbWEvY29tcG9uZW50cy9Qb3N0LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBSb3V0ZXIgZnJvbSBcIm5leHQvcm91dGVyXCI7XG5pbXBvcnQgUmVhY3RNYXJrZG93biBmcm9tIFwicmVhY3QtbWFya2Rvd25cIjtcblxuZXhwb3J0IHR5cGUgUG9zdFByb3BzID0ge1xuICBpZDogbnVtYmVyO1xuICB0aXRsZTogc3RyaW5nO1xuICBhdXRob3I6IHtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgZW1haWw6IHN0cmluZztcbiAgfSB8IG51bGw7XG4gIGNvbnRlbnQ6IHN0cmluZztcbiAgcHVibGlzaGVkOiBib29sZWFuO1xuICBjcmVhdGVkQXQ6IHN0cmluZztcbiAgdXBkYXRlZEF0OiBzdHJpbmc7XG59O1xuXG5jb25zdCBQb3N0OiBSZWFjdC5GQzx7IHBvc3Q6IFBvc3RQcm9wcyB9PiA9ICh7IHBvc3QgfSkgPT4ge1xuICBjb25zdCBhdXRob3JOYW1lID0gcG9zdC5hdXRob3IgPyBwb3N0LmF1dGhvci5uYW1lIDogXCJVbmtub3duIGF1dGhvclwiO1xuICByZXR1cm4gKFxuICAgIDxkaXYgb25DbGljaz17KCkgPT4gUm91dGVyLnB1c2goXCIvcC9baWRdXCIsIGAvcC8ke3Bvc3QuaWR9YCl9PlxuICAgICAgPGgyPntwb3N0LnRpdGxlfTwvaDI+XG4gICAgICA8c21hbGw+Qnkge2F1dGhvck5hbWV9PC9zbWFsbD5cbiAgICAgIDxSZWFjdE1hcmtkb3duIHNvdXJjZT17cG9zdC5jb250ZW50fSAvPlxuICAgICAgPHNtYWxsPntwb3N0LmNyZWF0ZWRBdH08L3NtYWxsPlxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICBkaXYge1xuICAgICAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgICAgIHBhZGRpbmc6IDJyZW07XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBvc3Q7XG4iXX0= */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Post.tsx */\"));\n};\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Post.tsx"],"names":["React","Router","ReactMarkdown","Post","post","authorName","author","name","push","id","title","content","createdAt"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAeA,IAAMC,IAAmC,GAAG,SAAtCA,IAAsC,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACxD,MAAMC,UAAU,GAAGD,IAAI,CAACE,MAAL,GAAcF,IAAI,CAACE,MAAL,CAAYC,IAA1B,GAAiC,gBAApD;AACA,SACE;AAAK,IAAA,OAAO,EAAE;AAAA,aAAMN,MAAM,CAACO,IAAP,CAAY,SAAZ,eAA6BJ,IAAI,CAACK,EAAlC,EAAN;AAAA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,IAAI,CAACM,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAWL,UAAX,CAFF,EAGE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAED,IAAI,CAACO,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQP,IAAI,CAACQ,SAAb,CAJF;AAAA;AAAA;AAAA,4rDADF;AAcD,CAhBD;;KAAMT,I;AAkBN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport Router from \"next/router\";\nimport ReactMarkdown from \"react-markdown\";\n\nexport type PostProps = {\n  id: number;\n  title: string;\n  author: {\n    name: string;\n    email: string;\n  } | null;\n  content: string;\n  published: boolean;\n  createdAt: string;\n  updatedAt: string;\n};\n\nconst Post: React.FC<{ post: PostProps }> = ({ post }) => {\n  const authorName = post.author ? post.author.name : \"Unknown author\";\n  return (\n    <div onClick={() => Router.push(\"/p/[id]\", `/p/${post.id}`)}>\n      <h2>{post.title}</h2>\n      <small>By {authorName}</small>\n      <ReactMarkdown source={post.content} />\n      <small>{post.createdAt}</small>\n      <style jsx>{`\n        div {\n          color: inherit;\n          padding: 2rem;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}