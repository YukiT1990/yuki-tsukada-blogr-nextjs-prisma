{"ast":null,"code":"var _jsxFileName = \"/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/pages/update-user.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { getSession } from \"next-auth/client\";\nimport prisma from \"../lib/prisma\";\nexport const getServerSideProps = async ({\n  req,\n  res\n}) => {\n  const session = await getSession({\n    req\n  });\n  console.log(\"session: \" + JSON.stringify(session, null, 2));\n\n  if (!session) {\n    res.statusCode = 403;\n    return {\n      props: {\n        drafts: []\n      }\n    };\n  }\n\n  const targetSession = await prisma.session.findUnique({\n    where: {\n      accessToken: session.accessToken\n    }\n  });\n  console.log(targetSession); // const targetUser = await prisma.users.findUnique({\n  //   where: { id: 4 },\n  // });\n  // console.log(targetUser);\n\n  return {\n    props: {\n      targetSession\n    }\n  };\n};\n\nconst UpdateUser = props => {\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\"); // console.log(\"props.userId: \" + props.userId);\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"update user\")));\n};\n\nexport default UpdateUser;","map":{"version":3,"sources":["/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/pages/update-user.tsx"],"names":["React","useState","Layout","getSession","prisma","getServerSideProps","req","res","session","console","log","JSON","stringify","statusCode","props","drafts","targetSession","findUnique","where","accessToken","UpdateUser","userId","setUserId","email","setEmail"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SAAqBC,UAArB,QAAuC,kBAAvC;AAEA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,OAAO,MAAMC,kBAAsC,GAAG,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAAwB;AAC5E,QAAMC,OAAO,GAAG,MAAML,UAAU,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAhC;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAcC,IAAI,CAACC,SAAL,CAAeJ,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAA1B;;AAEA,MAAI,CAACA,OAAL,EAAc;AACZD,IAAAA,GAAG,CAACM,UAAJ,GAAiB,GAAjB;AACA,WAAO;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAAT,KAAP;AACD;;AAED,QAAMC,aAAa,GAAG,MAAMZ,MAAM,CAACI,OAAP,CAAeS,UAAf,CAA0B;AACpDC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAEX,OAAO,CAACW;AAAvB;AAD6C,GAA1B,CAA5B;AAGAV,EAAAA,OAAO,CAACC,GAAR,CAAYM,aAAZ,EAb4E,CAe5E;AACA;AACA;AACA;;AAEA,SAAO;AAAEF,IAAAA,KAAK,EAAE;AAAEE,MAAAA;AAAF;AAAT,GAAP;AACD,CArBM;;AAuBP,MAAMI,UAAoB,GAAIN,KAAD,IAAW;AACtC,QAAM;AAAA,OAACO,MAAD;AAAA,OAASC;AAAT,MAAsBrB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACsB,KAAD;AAAA,OAAQC;AAAR,MAAoBvB,QAAQ,CAAC,EAAD,CAAlC,CAFsC,CAItC;;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,CADF;AAOD,CAbD;;AAeA,eAAemB,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport Router from \"next/router\";\nimport { useSession, getSession } from \"next-auth/client\";\nimport { GetServerSideProps } from \"next\";\nimport prisma from \"../lib/prisma\";\n\nexport const getServerSideProps: GetServerSideProps = async ({ req, res }) => {\n  const session = await getSession({ req });\n\n  console.log(\"session: \" + JSON.stringify(session, null, 2));\n\n  if (!session) {\n    res.statusCode = 403;\n    return { props: { drafts: [] } };\n  }\n\n  const targetSession = await prisma.session.findUnique({\n    where: { accessToken: session.accessToken },\n  });\n  console.log(targetSession);\n\n  // const targetUser = await prisma.users.findUnique({\n  //   where: { id: 4 },\n  // });\n  // console.log(targetUser);\n\n  return { props: { targetSession } };\n};\n\nconst UpdateUser: React.FC = (props) => {\n  const [userId, setUserId] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  // console.log(\"props.userId: \" + props.userId);\n\n  return (\n    <Layout>\n      <div>\n        <p>update user</p>\n      </div>\n    </Layout>\n  );\n};\n\nexport default UpdateUser;\n"]},"metadata":{},"sourceType":"module"}