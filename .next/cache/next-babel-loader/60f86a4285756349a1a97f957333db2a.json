{"ast":null,"code":"var _jsxFileName = \"/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport Router, { useRouter } from \"next/router\";\nimport { signOut, useSession } from \"next-auth/client\";\nimport { Search } from \"@material-ui/icons\";\n\nconst Header = () => {\n  const router = useRouter();\n\n  const isActive = pathname => router.pathname === pathname;\n\n  const [session, loading] = useSession();\n  const {\n    0: searching,\n    1: setSearching\n  } = useState(false);\n  const {\n    0: searchKeyword,\n    1: setSearchKeyword\n  } = useState(\"\");\n  const {\n    0: resultUsers,\n    1: setResultUsers\n  } = useState([]);\n  const {\n    0: resultPosts,\n    1: setResultPosts\n  } = useState([]);\n  useEffect(() => {\n    console.log(\"reset keyword\");\n    setSearching(false);\n    setSearchKeyword(\"\");\n  }, [router.pathname]); // console.log(\"router.pathname: \" + router.pathname);\n  // useEffect(() => {\n  //   if (searchKeyword != \"\") {\n  //     const resultUsers = async () => {\n  //       await prisma.user.findMany({\n  //         where: {\n  //           name: {\n  //             contains: searchKeyword,\n  //           },\n  //         },\n  //       });\n  //     };\n  //     console.log(\"resultUsers: \" + resultUsers);\n  //     const resultPosts = async () => {\n  //       await prisma.post.findMany({\n  //         where: {\n  //           AND: {\n  //             title: {\n  //               contains: searchKeyword,\n  //             },\n  //             content: {\n  //               contains: searchKeyword,\n  //             },\n  //           },\n  //         },\n  //       });\n  //     };\n  //     console.log(\"resultPosts: \" + resultPosts);\n  //   } else {\n  //     setResultUsers([]);\n  //     setResultPosts([]);\n  //   }\n  // }, [searchKeyword]);\n\n  const submitData = async e => {\n    e.preventDefault();\n\n    try {\n      await Router.push(`/search/${searchKeyword}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  let left = __jsx(\"div\", {\n    className: \"jsx-639611057\" + \" \" + \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    \"data-active\": isActive(\"/\"),\n    className: \"jsx-639611057\" + \" \" + \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Feed\")), __jsx(\"a\", {\n    onClick: () => setSearching(!searching),\n    className: \"jsx-639611057\" + \" \" + \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"639611057\",\n    __self: this\n  }, \".bold.jsx-639611057{font-weight:bold;}a.jsx-639611057{-webkit-text-decoration:none;text-decoration:none;color:#000;display:inline-block;}.left.jsx-639611057 a[data-active=\\\"true\\\"].jsx-639611057{color:gray;}a.jsx-639611057+a.jsx-639611057{margin-left:1rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx */\"));\n\n  let right = null;\n\n  if (loading) {\n    left = __jsx(\"div\", {\n      className: \"jsx-1698293825\" + \" \" + \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, __jsx(Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      \"data-active\": isActive(\"/\"),\n      className: \"jsx-1698293825\" + \" \" + \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Feed\")), __jsx(_JSXStyle, {\n      id: \"1698293825\",\n      __self: this\n    }, \".bold.jsx-1698293825{font-weight:bold;}a.jsx-1698293825{-webkit-text-decoration:none;text-decoration:none;color:#000;display:inline-block;}.left.jsx-1698293825 a[data-active=\\\"true\\\"].jsx-1698293825{color:gray;}a.jsx-1698293825+a.jsx-1698293825{margin-left:1rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx */\"));\n    right = __jsx(\"div\", {\n      className: \"jsx-2272693804\" + \" \" + \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      className: \"jsx-2272693804\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, \"Validating session ...\"), __jsx(_JSXStyle, {\n      id: \"2272693804\",\n      __self: this\n    }, \".right.jsx-2272693804{margin-left:auto;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx */\"));\n  }\n\n  if (!session) {\n    right = __jsx(\"div\", {\n      className: \"jsx-1951211810\" + \" \" + \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, __jsx(Link, {\n      href: \"/api/auth/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      \"data-active\": isActive(\"/signup\"),\n      className: \"jsx-1951211810\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, \"Log in\")), __jsx(_JSXStyle, {\n      id: \"1951211810\",\n      __self: this\n    }, \"a.jsx-1951211810{-webkit-text-decoration:none;text-decoration:none;color:#000;display:inline-block;background:#00e600;}a.jsx-1951211810+a.jsx-1951211810{margin-left:1rem;}.right.jsx-1951211810{margin-left:auto;}.right.jsx-1951211810 a.jsx-1951211810{border:1px solid black;padding:0.5rem 1rem;border-radius:3px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx */\"));\n  }\n\n  if (session) {\n    left = __jsx(\"div\", {\n      className: \"jsx-1698293825\" + \" \" + \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }, __jsx(Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      \"data-active\": isActive(\"/\"),\n      className: \"jsx-1698293825\" + \" \" + \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, \"Feed\")), __jsx(Link, {\n      href: \"/drafts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      \"data-active\": isActive(\"/drafts\"),\n      className: \"jsx-1698293825\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, \"My drafts\")), __jsx(\"a\", {\n      onClick: () => setSearching(!searching),\n      className: \"jsx-1698293825\" + \" \" + \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, __jsx(Search, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    })), __jsx(_JSXStyle, {\n      id: \"1698293825\",\n      __self: this\n    }, \".bold.jsx-1698293825{font-weight:bold;}a.jsx-1698293825{-webkit-text-decoration:none;text-decoration:none;color:#000;display:inline-block;}.left.jsx-1698293825 a[data-active=\\\"true\\\"].jsx-1698293825{color:gray;}a.jsx-1698293825+a.jsx-1698293825{margin-left:1rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx */\"));\n    right = __jsx(\"div\", {\n      className: \"jsx-2694767777\" + \" \" + \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      className: \"jsx-2694767777\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }, session.user.name, \" (\", session.user.email, \")\"), !session.user.email && __jsx(Link, {\n      href: \"/update-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, __jsx(\"button\", {\n      className: \"jsx-2694767777\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-2694767777\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    }, \"Register Email\"))), session.user.email && __jsx(React.Fragment, null, __jsx(Link, {\n      href: \"/update-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      className: \"jsx-2694767777\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-2694767777\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, \"Update Email\"))), __jsx(Link, {\n      href: \"/create\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      className: \"jsx-2694767777\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-2694767777\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }, \"New post\")))), __jsx(\"button\", {\n      onClick: () => signOut(),\n      className: \"jsx-2694767777\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-2694767777\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }, \"Log out\")), __jsx(_JSXStyle, {\n      id: \"2694767777\",\n      __self: this\n    }, \"a.jsx-2694767777{-webkit-text-decoration:none;text-decoration:none;color:#000;display:inline-block;}p.jsx-2694767777{display:inline-block;font-size:13px;padding-right:1rem;}a.jsx-2694767777+a.jsx-2694767777{margin-left:1rem;}.right.jsx-2694767777{margin-left:auto;}.right.jsx-2694767777 a.jsx-2694767777{border:none;padding:0.5rem 1rem;}button.jsx-2694767777{border:1px solid black;background:#00e600;border-radius:3px;margin-left:0.5rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx */\"));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"nav\", {\n    className: \"jsx-1863952721\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }\n  }, left, right, __jsx(_JSXStyle, {\n    id: \"1863952721\",\n    __self: this\n  }, \"nav.jsx-1863952721{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding:2rem;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx */\")), searching && __jsx(React.Fragment, null, __jsx(\"form\", {\n    onSubmit: submitData,\n    className: \"jsx-570636616\" + \" \" + \"seachForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    autoFocus: true,\n    onChange: e => setSearchKeyword(e.target.value),\n    placeholder: \"Search for users and posts.\",\n    type: \"text\",\n    value: searchKeyword,\n    className: \"jsx-570636616\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    disabled: searchKeyword == \"\",\n    type: \"submit\",\n    value: \"Search\",\n    className: \"jsx-570636616\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"570636616\",\n    __self: this\n  }, \".seachForm.jsx-570636616{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}input[type=\\\"text\\\"].jsx-570636616{width:90%;padding:0.5rem;border-radius:0.25rem;border:0.125rem solid rgba(0,0,0,0.2);}input[type=\\\"submit\\\"].jsx-570636616{background:#00e600;border:1px solid black;border-radius:3px;padding:0.5rem 2rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx */\")));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/components/Header.tsx"],"names":["React","useState","useEffect","Link","Router","useRouter","signOut","useSession","Search","Header","router","isActive","pathname","session","loading","searching","setSearching","searchKeyword","setSearchKeyword","resultUsers","setResultUsers","resultPosts","setResultPosts","console","log","submitData","e","preventDefault","push","error","left","right","user","name","email","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport Router, { useRouter } from \"next/router\";\nimport { signOut, useSession } from \"next-auth/client\";\nimport { Search } from \"@material-ui/icons\";\nimport prisma from \"../lib/prisma\";\nimport Post, { PostProps } from \"../components/Post\";\nimport { GetServerSideProps } from \"next\";\n\nconst Header: React.FC = () => {\n  const router = useRouter();\n  const isActive: (pathname: string) => boolean = (pathname) =>\n    router.pathname === pathname;\n\n  const [session, loading] = useSession();\n  const [searching, setSearching] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\n  const [resultUsers, setResultUsers] = useState([]);\n  const [resultPosts, setResultPosts] = useState([]);\n\n  useEffect(() => {\n    console.log(\"reset keyword\");\n    setSearching(false);\n    setSearchKeyword(\"\");\n  }, [router.pathname]);\n\n  // console.log(\"router.pathname: \" + router.pathname);\n\n  // useEffect(() => {\n  //   if (searchKeyword != \"\") {\n  //     const resultUsers = async () => {\n  //       await prisma.user.findMany({\n  //         where: {\n  //           name: {\n  //             contains: searchKeyword,\n  //           },\n  //         },\n  //       });\n  //     };\n  //     console.log(\"resultUsers: \" + resultUsers);\n  //     const resultPosts = async () => {\n  //       await prisma.post.findMany({\n  //         where: {\n  //           AND: {\n  //             title: {\n  //               contains: searchKeyword,\n  //             },\n  //             content: {\n  //               contains: searchKeyword,\n  //             },\n  //           },\n  //         },\n  //       });\n  //     };\n  //     console.log(\"resultPosts: \" + resultPosts);\n  //   } else {\n  //     setResultUsers([]);\n  //     setResultPosts([]);\n  //   }\n  // }, [searchKeyword]);\n\n  const submitData = async (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    try {\n      await Router.push(`/search/${searchKeyword}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  let left = (\n    <div className=\"left\">\n      <Link href=\"/\">\n        <a className=\"bold\" data-active={isActive(\"/\")}>\n          Feed\n        </a>\n      </Link>\n\n      <a className=\"search\" onClick={() => setSearching(!searching)}>\n        <Search />\n      </a>\n\n      <style jsx>{`\n        .bold {\n          font-weight: bold;\n        }\n\n        a {\n          text-decoration: none;\n          color: #000;\n          display: inline-block;\n        }\n\n        .left a[data-active=\"true\"] {\n          color: gray;\n        }\n\n        a + a {\n          margin-left: 1rem;\n        }\n      `}</style>\n    </div>\n  );\n\n  let right = null;\n\n  if (loading) {\n    left = (\n      <div className=\"left\">\n        <Link href=\"/\">\n          <a className=\"bold\" data-active={isActive(\"/\")}>\n            Feed\n          </a>\n        </Link>\n        <style jsx>{`\n          .bold {\n            font-weight: bold;\n          }\n\n          a {\n            text-decoration: none;\n            color: #000;\n            display: inline-block;\n          }\n\n          .left a[data-active=\"true\"] {\n            color: gray;\n          }\n\n          a + a {\n            margin-left: 1rem;\n          }\n        `}</style>\n      </div>\n    );\n    right = (\n      <div className=\"right\">\n        <p>Validating session ...</p>\n        <style jsx>{`\n          .right {\n            margin-left: auto;\n          }\n        `}</style>\n      </div>\n    );\n  }\n\n  if (!session) {\n    right = (\n      <div className=\"right\">\n        <Link href=\"/api/auth/signin\">\n          <a data-active={isActive(\"/signup\")}>Log in</a>\n        </Link>\n        <style jsx>{`\n          a {\n            text-decoration: none;\n            color: #000;\n            display: inline-block;\n            background: #00e600;\n          }\n\n          a + a {\n            margin-left: 1rem;\n          }\n\n          .right {\n            margin-left: auto;\n          }\n\n          .right a {\n            border: 1px solid black;\n            padding: 0.5rem 1rem;\n            border-radius: 3px;\n          }\n        `}</style>\n      </div>\n    );\n  }\n\n  if (session) {\n    left = (\n      <div className=\"left\">\n        <Link href=\"/\">\n          <a className=\"bold\" data-active={isActive(\"/\")}>\n            Feed\n          </a>\n        </Link>\n        <Link href=\"/drafts\">\n          <a data-active={isActive(\"/drafts\")}>My drafts</a>\n        </Link>\n\n        <a className=\"search\" onClick={() => setSearching(!searching)}>\n          <Search />\n        </a>\n\n        <style jsx>{`\n          .bold {\n            font-weight: bold;\n          }\n\n          a {\n            text-decoration: none;\n            color: #000;\n            display: inline-block;\n          }\n\n          .left a[data-active=\"true\"] {\n            color: gray;\n          }\n\n          a + a {\n            margin-left: 1rem;\n          }\n        `}</style>\n      </div>\n    );\n    right = (\n      <div className=\"right\">\n        <p>\n          {session.user.name} ({session.user.email})\n        </p>\n        {!session.user.email && (\n          <Link href=\"/update-user\">\n            <button>\n              <a>Register Email</a>\n            </button>\n          </Link>\n        )}\n        {session.user.email && (\n          <>\n            <Link href=\"/update-user\">\n              <button>\n                <a>Update Email</a>\n              </button>\n            </Link>\n            <Link href=\"/create\">\n              <button>\n                <a>New post</a>\n              </button>\n            </Link>\n          </>\n        )}\n        <button onClick={() => signOut()}>\n          <a>Log out</a>\n        </button>\n        <style jsx>{`\n          a {\n            text-decoration: none;\n            color: #000;\n            display: inline-block;\n          }\n\n          p {\n            display: inline-block;\n            font-size: 13px;\n            padding-right: 1rem;\n          }\n\n          a + a {\n            margin-left: 1rem;\n          }\n\n          .right {\n            margin-left: auto;\n          }\n\n          .right a {\n            /* border: 1px solid black; */\n            border: none;\n            padding: 0.5rem 1rem;\n            /* border-radius: 3px; */\n          }\n\n          button {\n            /* border: none; */\n            border: 1px solid black;\n            background: #00e600;\n            border-radius: 3px;\n            margin-left: 0.5rem;\n          }\n        `}</style>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <nav>\n        {left}\n        {right}\n        <style jsx>{`\n          nav {\n            display: flex;\n            padding: 2rem;\n            align-items: center;\n          }\n        `}</style>\n      </nav>\n      {searching && (\n        <>\n          <form onSubmit={submitData} className=\"seachForm\">\n            <input\n              autoFocus\n              onChange={(e) => setSearchKeyword(e.target.value)}\n              placeholder=\"Search for users and posts.\"\n              type=\"text\"\n              value={searchKeyword}\n            />\n            <input\n              disabled={searchKeyword == \"\"}\n              type=\"submit\"\n              value=\"Search\"\n            />\n          </form>\n          <style jsx>{`\n            .seachForm {\n              display: flex;\n              flex-direction: row;\n            }\n\n            input[type=\"text\"] {\n              width: 90%;\n              padding: 0.5rem;\n              /* margin: 0.5rem 0; */\n              border-radius: 0.25rem;\n              border: 0.125rem solid rgba(0, 0, 0, 0.2);\n            }\n\n            input[type=\"submit\"] {\n              background: #00e600;\n              /* border: 0; */\n              border: 1px solid black;\n              border-radius: 3px;\n              padding: 0.5rem 2rem;\n            }\n          `}</style>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}