{"ast":null,"code":"var _jsxFileName = \"/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/pages/search/[keyword].tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport prisma from \"../../lib/prisma\";\nimport Post from \"../../components/Post\";\nexport const getServerSideProps = async ({\n  params\n}) => {\n  console.log(\"keyword: \" + (params === null || params === void 0 ? void 0 : params.keyword));\n  const searchKeyword = params === null || params === void 0 ? void 0 : params.keyword.toString();\n  const postsR = await prisma.post.findMany({\n    where: {\n      AND: {\n        title: {\n          contains: searchKeyword\n        },\n        content: {\n          contains: searchKeyword\n        }\n      }\n    }\n  });\n  const posts = JSON.parse(JSON.stringify(postsR));\n  return {\n    props: {\n      posts\n    }\n  };\n};\n\nconst Search = props => {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-3495282894\" + \" \" + \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-3495282894\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Search Result\"), __jsx(\"main\", {\n    className: \"jsx-3495282894\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, props.posts.length == 0 && __jsx(\"p\", {\n    className: \"jsx-3495282894\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 39\n    }\n  }, \"No result.\"), props.posts.length > 0 && props.posts.map(post => __jsx(\"div\", {\n    key: post.id,\n    className: \"jsx-3495282894\" + \" \" + \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, __jsx(Post, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }))))), __jsx(_JSXStyle, {\n    id: \"3495282894\",\n    __self: this\n  }, \".post.jsx-3495282894{background:white;-webkit-transition:box-shadow 0.1s ease-in;transition:box-shadow 0.1s ease-in;}.post.jsx-3495282894:hover{box-shadow:1px 1px 3px #aaa;}.post.jsx-3495282894+.post.jsx-3495282894{margin-top:2rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95dWtpLnQvRGVza3RvcC9OZXh0SlNQcmFjdGljZS9ibG9nci1uZXh0anMtcHJpc21hL3BhZ2VzL3NlYXJjaC9ba2V5d29yZF0udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1Ea0IsQUFHNEIsQUFLVyxBQUlaLGdCQUNsQixDQVRxQyxXQUtyQyxtRUFKQSIsImZpbGUiOiIvVXNlcnMveXVraS50L0Rlc2t0b3AvTmV4dEpTUHJhY3RpY2UvYmxvZ3ItbmV4dGpzLXByaXNtYS9wYWdlcy9zZWFyY2gvW2tleXdvcmRdLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgR2V0U2VydmVyU2lkZVByb3BzIH0gZnJvbSBcIm5leHRcIjtcbmltcG9ydCBMYXlvdXQgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvTGF5b3V0XCI7XG5pbXBvcnQgUm91dGVyIGZyb20gXCJuZXh0L3JvdXRlclwiO1xuaW1wb3J0IHByaXNtYSBmcm9tIFwiLi4vLi4vbGliL3ByaXNtYVwiO1xuaW1wb3J0IFBvc3QsIHsgUG9zdFByb3BzIH0gZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvUG9zdFwiO1xuaW1wb3J0IHsgVXNlclByb3BzIH0gZnJvbSBcIi4uL3VwZGF0ZS11c2VyXCI7XG5pbXBvcnQgeyBzdHJpbmdpZnkgfSBmcm9tIFwicXVlcnlzdHJpbmdcIjtcblxuZXhwb3J0IGNvbnN0IGdldFNlcnZlclNpZGVQcm9wczogR2V0U2VydmVyU2lkZVByb3BzID0gYXN5bmMgKHsgcGFyYW1zIH0pID0+IHtcbiAgY29uc29sZS5sb2coXCJrZXl3b3JkOiBcIiArIHBhcmFtcz8ua2V5d29yZCk7XG4gIGNvbnN0IHNlYXJjaEtleXdvcmQ6IHN0cmluZyA9IHBhcmFtcz8ua2V5d29yZC50b1N0cmluZygpO1xuXG4gIGNvbnN0IHBvc3RzUiA9IGF3YWl0IHByaXNtYS5wb3N0LmZpbmRNYW55KHtcbiAgICB3aGVyZToge1xuICAgICAgQU5EOiB7XG4gICAgICAgIHRpdGxlOiB7XG4gICAgICAgICAgY29udGFpbnM6IHNlYXJjaEtleXdvcmQsXG4gICAgICAgIH0sXG4gICAgICAgIGNvbnRlbnQ6IHtcbiAgICAgICAgICBjb250YWluczogc2VhcmNoS2V5d29yZCxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSk7XG4gIGNvbnN0IHBvc3RzID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShwb3N0c1IpKTtcbiAgcmV0dXJuIHtcbiAgICBwcm9wczogeyBwb3N0cyB9LFxuICB9O1xufTtcblxudHlwZSBQcm9wcyA9IHtcbiAgcG9zdHM6IFBvc3RQcm9wc1tdO1xufTtcblxuY29uc3QgU2VhcmNoOiBSZWFjdC5GQzxQcm9wcz4gPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJwYWdlXCI+XG4gICAgICAgIDxoMT5TZWFyY2ggUmVzdWx0PC9oMT5cbiAgICAgICAgPG1haW4+XG4gICAgICAgICAge3Byb3BzLnBvc3RzLmxlbmd0aCA9PSAwICYmIDxwPk5vIHJlc3VsdC48L3A+fVxuICAgICAgICAgIHtwcm9wcy5wb3N0cy5sZW5ndGggPiAwICYmXG4gICAgICAgICAgICBwcm9wcy5wb3N0cy5tYXAoKHBvc3QpID0+IChcbiAgICAgICAgICAgICAgPGRpdiBrZXk9e3Bvc3QuaWR9IGNsYXNzTmFtZT1cInBvc3RcIj5cbiAgICAgICAgICAgICAgICA8UG9zdCBwb3N0PXtwb3N0fSAvPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICkpfVxuICAgICAgICA8L21haW4+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAucG9zdCB7XG4gICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAwLjFzIGVhc2UtaW47XG4gICAgICAgIH1cblxuICAgICAgICAucG9zdDpob3ZlciB7XG4gICAgICAgICAgYm94LXNoYWRvdzogMXB4IDFweCAzcHggI2FhYTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wb3N0ICsgLnBvc3Qge1xuICAgICAgICAgIG1hcmdpbi10b3A6IDJyZW07XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L0xheW91dD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFNlYXJjaDtcbiJdfQ== */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/pages/search/[keyword].tsx */\"));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/pages/search/[keyword].tsx"],"names":["React","Layout","prisma","Post","getServerSideProps","params","console","log","keyword","searchKeyword","toString","postsR","post","findMany","where","AND","title","contains","content","posts","JSON","parse","stringify","props","Search","length","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,IAAP,MAAgC,uBAAhC;AAIA,OAAO,MAAMC,kBAAsC,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAsB;AAC1EC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAcF,MAAd,aAAcA,MAAd,uBAAcA,MAAM,CAAEG,OAAtB,CAAZ;AACA,QAAMC,aAAqB,GAAGJ,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEG,OAAR,CAAgBE,QAAhB,EAA9B;AAEA,QAAMC,MAAM,GAAG,MAAMT,MAAM,CAACU,IAAP,CAAYC,QAAZ,CAAqB;AACxCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,GAAG,EAAE;AACHC,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAER;AADL,SADJ;AAIHS,QAAAA,OAAO,EAAE;AACPD,UAAAA,QAAQ,EAAER;AADH;AAJN;AADA;AADiC,GAArB,CAArB;AAYA,QAAMU,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeX,MAAf,CAAX,CAAd;AACA,SAAO;AACLY,IAAAA,KAAK,EAAE;AAAEJ,MAAAA;AAAF;AADF,GAAP;AAGD,CApBM;;AA0BP,MAAMK,MAAuB,GAAID,KAAD,IAAW;AACzC,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACJ,KAAN,CAAYM,MAAZ,IAAsB,CAAtB,IAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD9B,EAEGF,KAAK,CAACJ,KAAN,CAAYM,MAAZ,GAAqB,CAArB,IACCF,KAAK,CAACJ,KAAN,CAAYO,GAAZ,CAAiBd,IAAD,IACd;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACe,EAAf;AAAA,wCAA6B,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEf,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAHJ,CAFF,CADF;AAAA;AAAA;AAAA,ojGADF;AA+BD,CAhCD;;AAkCA,eAAeY,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { GetServerSideProps } from \"next\";\nimport Layout from \"../../components/Layout\";\nimport Router from \"next/router\";\nimport prisma from \"../../lib/prisma\";\nimport Post, { PostProps } from \"../../components/Post\";\nimport { UserProps } from \"../update-user\";\nimport { stringify } from \"querystring\";\n\nexport const getServerSideProps: GetServerSideProps = async ({ params }) => {\n  console.log(\"keyword: \" + params?.keyword);\n  const searchKeyword: string = params?.keyword.toString();\n\n  const postsR = await prisma.post.findMany({\n    where: {\n      AND: {\n        title: {\n          contains: searchKeyword,\n        },\n        content: {\n          contains: searchKeyword,\n        },\n      },\n    },\n  });\n  const posts = JSON.parse(JSON.stringify(postsR));\n  return {\n    props: { posts },\n  };\n};\n\ntype Props = {\n  posts: PostProps[];\n};\n\nconst Search: React.FC<Props> = (props) => {\n  return (\n    <Layout>\n      <div className=\"page\">\n        <h1>Search Result</h1>\n        <main>\n          {props.posts.length == 0 && <p>No result.</p>}\n          {props.posts.length > 0 &&\n            props.posts.map((post) => (\n              <div key={post.id} className=\"post\">\n                <Post post={post} />\n              </div>\n            ))}\n        </main>\n      </div>\n\n      <style jsx>{`\n        .post {\n          background: white;\n          transition: box-shadow 0.1s ease-in;\n        }\n\n        .post:hover {\n          box-shadow: 1px 1px 3px #aaa;\n        }\n\n        .post + .post {\n          margin-top: 2rem;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}