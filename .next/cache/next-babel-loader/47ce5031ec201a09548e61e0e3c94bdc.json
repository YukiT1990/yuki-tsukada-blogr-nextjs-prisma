{"ast":null,"code":"var _jsxFileName = \"/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/pages/update-user.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { prisma } from \"@prisma/client\"; // export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {\n//   const session = await getSession({ req });\n//   if (!session) {\n//     res.statusCode = 403;\n//     return { props: { drafts: [] } };\n//   }\n//   // const targetSession = await prisma.sessions.findUnique({\n//   //   where: { accessToken: session.accessToken },\n//   // });\n//   // console.log(targetSession);\n//   // const targetUser = await prisma.users.findUnique({\n//   //   where: { id: 4 },\n//   // });\n//   // console.log(targetUser);\n//   // return { props: { targetSession } };\n// };\n\nconst UpdateUser = props => {\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  console.log(prisma);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"update user\")));\n};\n\nexport default UpdateUser;","map":{"version":3,"sources":["/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/pages/update-user.tsx"],"names":["React","useState","Layout","prisma","UpdateUser","props","userId","setUserId","email","setEmail","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAIA,SAASC,MAAT,QAAuB,gBAAvB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,UAAoB,GAAIC,KAAD,IAAW;AACtC,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,CADF;AAOD,CAbD;;AAeA,eAAeC,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport Router from \"next/router\";\nimport { useSession, getSession } from \"next-auth/client\";\nimport { GetServerSideProps } from \"next\";\nimport { prisma } from \"@prisma/client\";\n\n// export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {\n//   const session = await getSession({ req });\n\n//   if (!session) {\n//     res.statusCode = 403;\n//     return { props: { drafts: [] } };\n//   }\n\n//   // const targetSession = await prisma.sessions.findUnique({\n//   //   where: { accessToken: session.accessToken },\n//   // });\n//   // console.log(targetSession);\n\n//   // const targetUser = await prisma.users.findUnique({\n//   //   where: { id: 4 },\n//   // });\n//   // console.log(targetUser);\n\n//   // return { props: { targetSession } };\n// };\n\nconst UpdateUser: React.FC = (props) => {\n  const [userId, setUserId] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  console.log(prisma);\n\n  return (\n    <Layout>\n      <div>\n        <p>update user</p>\n      </div>\n    </Layout>\n  );\n};\n\nexport default UpdateUser;\n"]},"metadata":{},"sourceType":"module"}