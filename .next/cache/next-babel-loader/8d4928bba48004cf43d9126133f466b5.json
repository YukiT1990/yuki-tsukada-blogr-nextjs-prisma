{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/pages/update-user.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Layout from \"../components/Layout\";\n\nvar UpdateUser = function UpdateUser(props) {\n  _s();\n\n  var _useState = useState(props.user_id),\n      userId = _useState[0],\n      setUserId = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      email = _useState2[0],\n      setEmail = _useState2[1]; // console.log(\"props.userId: \" + props.userId);\n\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"update user \", userId)));\n};\n\n_s(UpdateUser, \"ZITGlOC9Ux3gXIwHS8ouVR3h5jo=\");\n\n_c = UpdateUser;\nexport var __N_SSP = true;\nexport default UpdateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"sources":["/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/pages/update-user.tsx"],"names":["React","useState","Layout","UpdateUser","props","user_id","userId","setUserId","email","setEmail"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAuCA,IAAMC,UAAoB,GAAG,SAAvBA,UAAuB,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACVH,QAAQ,CAACG,KAAK,CAACC,OAAP,CADE;AAAA,MAC/BC,MAD+B;AAAA,MACvBC,SADuB;;AAAA,mBAEZN,QAAQ,CAAC,EAAD,CAFI;AAAA,MAE/BO,KAF+B;AAAA,MAExBC,QAFwB,kBAItC;;;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBH,MAAhB,CADF,CADF,CADF;AAOD,CAbD;;GAAMH,U;;KAAAA,U;;AAeN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport Router from \"next/router\";\nimport { useSession, getSession } from \"next-auth/client\";\nimport { GetServerSideProps } from \"next\";\nimport prisma from \"../lib/prisma\";\n\nexport const getServerSideProps: GetServerSideProps = async ({ req, res }) => {\n  const session = await getSession({ req });\n\n  // console.log(\"session: \" + JSON.stringify(session, null, 2));\n\n  if (!session) {\n    res.statusCode = 403;\n    return { props: { drafts: [] } };\n  }\n\n  let token: string;\n  if (typeof session.accessToken == \"string\") {\n    token = session.accessToken;\n  } else {\n    token = \"\";\n  }\n\n  const targetSession = await prisma.session.findUnique({\n    where: { accessToken: token },\n  });\n  console.log(targetSession.userId);\n\n  const userId = targetSession.userId;\n\n  // const targetUser = await prisma.users.findUnique({\n  //   where: { id: 4 },\n  // });\n  // console.log(targetUser);\n\n  // return { user_id: userId };\n  return { props: { user_id: userId } };\n};\n\nconst UpdateUser: React.FC = (props) => {\n  const [userId, setUserId] = useState(props.user_id);\n  const [email, setEmail] = useState(\"\");\n\n  // console.log(\"props.userId: \" + props.userId);\n\n  return (\n    <Layout>\n      <div>\n        <p>update user {userId}</p>\n      </div>\n    </Layout>\n  );\n};\n\nexport default UpdateUser;\n"]},"metadata":{},"sourceType":"module"}