{"ast":null,"code":"import prisma from \"../../../lib/prisma\"; // DELETE /api/post/:id\n// PUT /api/post/:id\n\nexport default async function handle(req, res) {\n  const postId = req.query.id;\n\n  if (req.method === \"DELETE\") {\n    const post = await prisma.post.delete({\n      where: {\n        id: Number(postId)\n      }\n    });\n    res.json(post);\n  } else if (req.method === \"PUT\") {\n    const {\n      title,\n      content\n    } = req.body;\n    const post = await prisma.post.update({\n      where: {\n        id: Number(postId)\n      },\n      data: {\n        title: title,\n        content: content,\n        updatedAt: new Date()\n      }\n    });\n    res.json(post);\n  } else {\n    throw new Error(`The HTTP ${req.method} method is not supported at this route.`);\n  }\n}","map":{"version":3,"sources":["/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/pages/api/post/[id].ts"],"names":["prisma","handle","req","res","postId","query","id","method","post","delete","where","Number","json","title","content","body","update","data","updatedAt","Date","Error"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,qBAAnB,C,CAEA;AACA;;AACA,eAAe,eAAeC,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC7C,QAAMC,MAAM,GAAGF,GAAG,CAACG,KAAJ,CAAUC,EAAzB;;AACA,MAAIJ,GAAG,CAACK,MAAJ,KAAe,QAAnB,EAA6B;AAC3B,UAAMC,IAAI,GAAG,MAAMR,MAAM,CAACQ,IAAP,CAAYC,MAAZ,CAAmB;AACpCC,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,EAAE,EAAEK,MAAM,CAACP,MAAD;AAAZ;AAD6B,KAAnB,CAAnB;AAGAD,IAAAA,GAAG,CAACS,IAAJ,CAASJ,IAAT;AACD,GALD,MAKO,IAAIN,GAAG,CAACK,MAAJ,KAAe,KAAnB,EAA0B;AAC/B,UAAM;AAAEM,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAqBZ,GAAG,CAACa,IAA/B;AACA,UAAMP,IAAI,GAAG,MAAMR,MAAM,CAACQ,IAAP,CAAYQ,MAAZ,CAAmB;AACpCN,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,EAAE,EAAEK,MAAM,CAACP,MAAD;AAAZ,OAD6B;AAEpCa,MAAAA,IAAI,EAAE;AAAEJ,QAAAA,KAAK,EAAEA,KAAT;AAAgBC,QAAAA,OAAO,EAAEA,OAAzB;AAAkCI,QAAAA,SAAS,EAAE,IAAIC,IAAJ;AAA7C;AAF8B,KAAnB,CAAnB;AAIAhB,IAAAA,GAAG,CAACS,IAAJ,CAASJ,IAAT;AACD,GAPM,MAOA;AACL,UAAM,IAAIY,KAAJ,CACH,YAAWlB,GAAG,CAACK,MAAO,yCADnB,CAAN;AAGD;AACF","sourcesContent":["import prisma from \"../../../lib/prisma\";\n\n// DELETE /api/post/:id\n// PUT /api/post/:id\nexport default async function handle(req, res) {\n  const postId = req.query.id;\n  if (req.method === \"DELETE\") {\n    const post = await prisma.post.delete({\n      where: { id: Number(postId) },\n    });\n    res.json(post);\n  } else if (req.method === \"PUT\") {\n    const { title, content } = req.body;\n    const post = await prisma.post.update({\n      where: { id: Number(postId) },\n      data: { title: title, content: content, updatedAt: new Date() },\n    });\n    res.json(post);\n  } else {\n    throw new Error(\n      `The HTTP ${req.method} method is not supported at this route.`\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}