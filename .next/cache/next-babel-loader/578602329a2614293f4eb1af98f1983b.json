{"ast":null,"code":"var _jsxFileName = \"/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/pages/userfeed/[userId].tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Post from \"../../components/Post\";\nimport prisma from \"../../lib/prisma\";\nexport const getServerSideProps = async ({\n  params\n}) => {\n  console.log(\"keyword: \" + (params === null || params === void 0 ? void 0 : params.keyword));\n  const userId = Number(params === null || params === void 0 ? void 0 : params.userId);\n  const user = await prisma.user.findUnique({\n    where: {\n      id: userId\n    }\n  });\n  const feedsR = await prisma.post.findMany({\n    where: {\n      authorId: userId,\n      published: true\n    },\n    include: {\n      author: {\n        select: {\n          name: true\n        }\n      }\n    }\n  });\n  let feedsU = JSON.parse(JSON.stringify(feedsR));\n  let feeds = feedsU.sort((p1, p2) => {\n    return p2.createdAt > p1.createdAt ? 1 : -1;\n  });\n  return {\n    props: {\n      feeds,\n      user\n    }\n  };\n};\n\nconst UserFeed = props => {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-3495282894\" + \" \" + \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-3495282894\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"'s Feed\"), __jsx(\"main\", {\n    className: \"jsx-3495282894\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, props.feeds.map(post => __jsx(\"div\", {\n    key: post.id,\n    className: \"jsx-3495282894\" + \" \" + \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(Post, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }))))), __jsx(_JSXStyle, {\n    id: \"3495282894\",\n    __self: this\n  }, \".post.jsx-3495282894{background:white;-webkit-transition:box-shadow 0.1s ease-in;transition:box-shadow 0.1s ease-in;}.post.jsx-3495282894:hover{box-shadow:1px 1px 3px #aaa;}.post.jsx-3495282894+.post.jsx-3495282894{margin-top:2rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95dWtpLnQvRGVza3RvcC9OZXh0SlNQcmFjdGljZS9ibG9nci1uZXh0anMtcHJpc21hL3BhZ2VzL3VzZXJmZWVkL1t1c2VySWRdLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1RGtCLEFBRzRCLEFBS1csQUFJWixnQkFDbEIsQ0FUcUMsV0FLckMsbUVBSkEiLCJmaWxlIjoiL1VzZXJzL3l1a2kudC9EZXNrdG9wL05leHRKU1ByYWN0aWNlL2Jsb2dyLW5leHRqcy1wcmlzbWEvcGFnZXMvdXNlcmZlZWQvW3VzZXJJZF0udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgR2V0U2VydmVyU2lkZVByb3BzIH0gZnJvbSBcIm5leHRcIjtcbmltcG9ydCBMYXlvdXQgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvTGF5b3V0XCI7XG5pbXBvcnQgUG9zdCwgeyBQb3N0UHJvcHMgfSBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9Qb3N0XCI7XG5pbXBvcnQgeyBVc2VyUHJvcHMgfSBmcm9tIFwiLi4vdXBkYXRlLXVzZXJcIjtcbmltcG9ydCBwcmlzbWEgZnJvbSBcIi4uLy4uL2xpYi9wcmlzbWFcIjtcblxuZXhwb3J0IGNvbnN0IGdldFNlcnZlclNpZGVQcm9wczogR2V0U2VydmVyU2lkZVByb3BzID0gYXN5bmMgKHsgcGFyYW1zIH0pID0+IHtcbiAgY29uc29sZS5sb2coXCJrZXl3b3JkOiBcIiArIHBhcmFtcz8ua2V5d29yZCk7XG4gIGNvbnN0IHVzZXJJZCA9IE51bWJlcihwYXJhbXM/LnVzZXJJZCk7XG5cbiAgY29uc3QgdXNlciA9IGF3YWl0IHByaXNtYS51c2VyLmZpbmRVbmlxdWUoe1xuICAgIHdoZXJlOiB7XG4gICAgICBpZDogdXNlcklkLFxuICAgIH0sXG4gIH0pO1xuXG4gIGNvbnN0IGZlZWRzUiA9IGF3YWl0IHByaXNtYS5wb3N0LmZpbmRNYW55KHtcbiAgICB3aGVyZToge1xuICAgICAgYXV0aG9ySWQ6IHVzZXJJZCxcbiAgICAgIHB1Ymxpc2hlZDogdHJ1ZSxcbiAgICB9LFxuICAgIGluY2x1ZGU6IHtcbiAgICAgIGF1dGhvcjoge1xuICAgICAgICBzZWxlY3Q6IHsgbmFtZTogdHJ1ZSB9LFxuICAgICAgfSxcbiAgICB9LFxuICB9KTtcbiAgbGV0IGZlZWRzVSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZmVlZHNSKSk7XG4gIGxldCBmZWVkcyA9IGZlZWRzVS5zb3J0KChwMTogUG9zdFByb3BzLCBwMjogUG9zdFByb3BzKSA9PiB7XG4gICAgcmV0dXJuIHAyLmNyZWF0ZWRBdCA+IHAxLmNyZWF0ZWRBdCA/IDEgOiAtMTtcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgcHJvcHM6IHsgZmVlZHMsIHVzZXIgfSxcbiAgfTtcbn07XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGZlZWRzOiBQb3N0UHJvcHNbXTtcbiAgdXNlcjogVXNlclByb3BzO1xufTtcblxuY29uc3QgVXNlckZlZWQ6IFJlYWN0LkZDPFByb3BzPiA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gKFxuICAgIDxMYXlvdXQ+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInBhZ2VcIj5cbiAgICAgICAgPGgxPnt9J3MgRmVlZDwvaDE+XG4gICAgICAgIDxtYWluPlxuICAgICAgICAgIHtwcm9wcy5mZWVkcy5tYXAoKHBvc3QpID0+IChcbiAgICAgICAgICAgIDxkaXYga2V5PXtwb3N0LmlkfSBjbGFzc05hbWU9XCJwb3N0XCI+XG4gICAgICAgICAgICAgIDxQb3N0IHBvc3Q9e3Bvc3R9IC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9tYWluPlxuICAgICAgPC9kaXY+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5wb3N0IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICB0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuMXMgZWFzZS1pbjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5wb3N0OmhvdmVyIHtcbiAgICAgICAgICBib3gtc2hhZG93OiAxcHggMXB4IDNweCAjYWFhO1xuICAgICAgICB9XG5cbiAgICAgICAgLnBvc3QgKyAucG9zdCB7XG4gICAgICAgICAgbWFyZ2luLXRvcDogMnJlbTtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvTGF5b3V0PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVXNlckZlZWQ7XG4iXX0= */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/pages/userfeed/[userId].tsx */\"));\n};\n\nexport default UserFeed;","map":{"version":3,"sources":["/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/pages/userfeed/[userId].tsx"],"names":["React","Layout","Post","prisma","getServerSideProps","params","console","log","keyword","userId","Number","user","findUnique","where","id","feedsR","post","findMany","authorId","published","include","author","select","name","feedsU","JSON","parse","stringify","feeds","sort","p1","p2","createdAt","props","UserFeed","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAgC,uBAAhC;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,OAAO,MAAMC,kBAAsC,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAsB;AAC1EC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAcF,MAAd,aAAcA,MAAd,uBAAcA,MAAM,CAAEG,OAAtB,CAAZ;AACA,QAAMC,MAAM,GAAGC,MAAM,CAACL,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEI,MAAT,CAArB;AAEA,QAAME,IAAI,GAAG,MAAMR,MAAM,CAACQ,IAAP,CAAYC,UAAZ,CAAuB;AACxCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,EAAE,EAAEL;AADC;AADiC,GAAvB,CAAnB;AAMA,QAAMM,MAAM,GAAG,MAAMZ,MAAM,CAACa,IAAP,CAAYC,QAAZ,CAAqB;AACxCJ,IAAAA,KAAK,EAAE;AACLK,MAAAA,QAAQ,EAAET,MADL;AAELU,MAAAA,SAAS,EAAE;AAFN,KADiC;AAKxCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR;AADF;AADD;AAL+B,GAArB,CAArB;AAWA,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeZ,MAAf,CAAX,CAAb;AACA,MAAIa,KAAK,GAAGJ,MAAM,CAACK,IAAP,CAAY,CAACC,EAAD,EAAgBC,EAAhB,KAAkC;AACxD,WAAOA,EAAE,CAACC,SAAH,GAAeF,EAAE,CAACE,SAAlB,GAA8B,CAA9B,GAAkC,CAAC,CAA1C;AACD,GAFW,CAAZ;AAGA,SAAO;AACLC,IAAAA,KAAK,EAAE;AAAEL,MAAAA,KAAF;AAASjB,MAAAA;AAAT;AADF,GAAP;AAGD,CA5BM;;AAmCP,MAAMuB,QAAyB,GAAID,KAAD,IAAW;AAC3C,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACL,KAAN,CAAYO,GAAZ,CAAiBnB,IAAD,IACf;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACF,EAAf;AAAA,wCAA6B,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CAFF,CADF;AAAA;AAAA;AAAA,ijGADF;AA4BD,CA7BD;;AA+BA,eAAekB,QAAf","sourcesContent":["import React from \"react\";\nimport { GetServerSideProps } from \"next\";\nimport Layout from \"../../components/Layout\";\nimport Post, { PostProps } from \"../../components/Post\";\nimport { UserProps } from \"../update-user\";\nimport prisma from \"../../lib/prisma\";\n\nexport const getServerSideProps: GetServerSideProps = async ({ params }) => {\n  console.log(\"keyword: \" + params?.keyword);\n  const userId = Number(params?.userId);\n\n  const user = await prisma.user.findUnique({\n    where: {\n      id: userId,\n    },\n  });\n\n  const feedsR = await prisma.post.findMany({\n    where: {\n      authorId: userId,\n      published: true,\n    },\n    include: {\n      author: {\n        select: { name: true },\n      },\n    },\n  });\n  let feedsU = JSON.parse(JSON.stringify(feedsR));\n  let feeds = feedsU.sort((p1: PostProps, p2: PostProps) => {\n    return p2.createdAt > p1.createdAt ? 1 : -1;\n  });\n  return {\n    props: { feeds, user },\n  };\n};\n\ntype Props = {\n  feeds: PostProps[];\n  user: UserProps;\n};\n\nconst UserFeed: React.FC<Props> = (props) => {\n  return (\n    <Layout>\n      <div className=\"page\">\n        <h1>{}'s Feed</h1>\n        <main>\n          {props.feeds.map((post) => (\n            <div key={post.id} className=\"post\">\n              <Post post={post} />\n            </div>\n          ))}\n        </main>\n      </div>\n      <style jsx>{`\n        .post {\n          background: white;\n          transition: box-shadow 0.1s ease-in;\n        }\n\n        .post:hover {\n          box-shadow: 1px 1px 3px #aaa;\n        }\n\n        .post + .post {\n          margin-top: 2rem;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nexport default UserFeed;\n"]},"metadata":{},"sourceType":"module"}