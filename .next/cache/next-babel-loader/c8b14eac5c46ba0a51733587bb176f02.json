{"ast":null,"code":"var _jsxFileName = \"/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/pages/p/[id].tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Layout from \"../../components/Layout\";\nimport Router from \"next/router\";\nimport { useSession } from \"next-auth/client\";\nimport prisma from \"../../lib/prisma\";\nimport Link from \"next/link\";\nexport const getServerSideProps = async ({\n  params\n}) => {\n  const postR = await prisma.post.findUnique({\n    where: {\n      id: Number(params === null || params === void 0 ? void 0 : params.id) || -1\n    },\n    include: {\n      author: {\n        select: {\n          name: true,\n          email: true\n        }\n      }\n    }\n  });\n  const post = JSON.parse(JSON.stringify(postR));\n  return {\n    props: post\n  };\n};\n\nasync function publishPost(id) {\n  await fetch(`/api/publish/${id}`, {\n    method: \"PUT\"\n  });\n  await Router.push(\"/\");\n}\n\nasync function deletePost(id) {\n  await fetch(`/api/post/${id}`, {\n    method: \"DELETE\"\n  });\n  Router.push(\"/\");\n}\n\nasync function editPost(id) {\n  // await fetch(`/api/post/${id}`, {\n  //   method: \"PUT\",\n  // });\n  // Router.push(\"/\");\n  Router.push(`/api/post/edit/${id}`);\n}\n\nconst Post = props => {\n  var _session$user, _props$author, _props$author2;\n\n  const [session, loading] = useSession();\n\n  if (loading) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    }, \"Authenticating ...\");\n  }\n\n  const userHasValidSession = Boolean(session);\n  const postBelongsToUser = (session === null || session === void 0 ? void 0 : (_session$user = session.user) === null || _session$user === void 0 ? void 0 : _session$user.email) === ((_props$author = props.author) === null || _props$author === void 0 ? void 0 : _props$author.email);\n  let title = props.title;\n\n  if (!props.published) {\n    title = `${title} (Draft)`;\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-1758098127\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-1758098127\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, title), __jsx(\"p\", {\n    className: \"jsx-1758098127\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"By \", (props === null || props === void 0 ? void 0 : (_props$author2 = props.author) === null || _props$author2 === void 0 ? void 0 : _props$author2.name) || \"Unknown author\"), __jsx(ReactMarkdown, {\n    source: props.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), !props.published && userHasValidSession && postBelongsToUser && __jsx(\"button\", {\n    onClick: () => publishPost(props.id),\n    className: \"jsx-1758098127\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Publish\"), userHasValidSession && postBelongsToUser && __jsx(React.Fragment, null, __jsx(Link, {\n    href: `/api/post/edit/{$props.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"jsx-1758098127\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Edit\")), __jsx(\"button\", {\n    onClick: () => deletePost(props.id),\n    className: \"jsx-1758098127\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Delete\"))), __jsx(_JSXStyle, {\n    id: \"1758098127\",\n    __self: this\n  }, \".page.jsx-1758098127{background:rgba(0,255,0,0.05);padding:2rem;}.actions.jsx-1758098127{margin-top:2rem;}button.jsx-1758098127{background:#00e600;border:1px solid black;border-radius:0.125rem;padding:1rem 2rem;}button.jsx-1758098127+button.jsx-1758098127{margin-left:1rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95dWtpLnQvRGVza3RvcC9OZXh0SlNQcmFjdGljZS9ibG9nci1uZXh0anMtcHJpc21hL3BhZ2VzL3AvW2lkXS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0ZrQixBQUc0QyxBQUtqQixBQUlHLEFBUUYsZ0JBWG5CLENBWUEsRUFQeUIsV0FWVixZQVdVLENBVnpCLHNCQVdvQixrQkFDcEIiLCJmaWxlIjoiL1VzZXJzL3l1a2kudC9EZXNrdG9wL05leHRKU1ByYWN0aWNlL2Jsb2dyLW5leHRqcy1wcmlzbWEvcGFnZXMvcC9baWRdLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IEdldFNlcnZlclNpZGVQcm9wcyB9IGZyb20gXCJuZXh0XCI7XG5pbXBvcnQgUmVhY3RNYXJrZG93biBmcm9tIFwicmVhY3QtbWFya2Rvd25cIjtcbmltcG9ydCBMYXlvdXQgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvTGF5b3V0XCI7XG5pbXBvcnQgUm91dGVyIGZyb20gXCJuZXh0L3JvdXRlclwiO1xuaW1wb3J0IHsgUG9zdFByb3BzIH0gZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvUG9zdFwiO1xuaW1wb3J0IHsgdXNlU2Vzc2lvbiB9IGZyb20gXCJuZXh0LWF1dGgvY2xpZW50XCI7XG5pbXBvcnQgcHJpc21hIGZyb20gXCIuLi8uLi9saWIvcHJpc21hXCI7XG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9saW5rXCI7XG5cbmV4cG9ydCBjb25zdCBnZXRTZXJ2ZXJTaWRlUHJvcHM6IEdldFNlcnZlclNpZGVQcm9wcyA9IGFzeW5jICh7IHBhcmFtcyB9KSA9PiB7XG4gIGNvbnN0IHBvc3RSID0gYXdhaXQgcHJpc21hLnBvc3QuZmluZFVuaXF1ZSh7XG4gICAgd2hlcmU6IHtcbiAgICAgIGlkOiBOdW1iZXIocGFyYW1zPy5pZCkgfHwgLTEsXG4gICAgfSxcbiAgICBpbmNsdWRlOiB7XG4gICAgICBhdXRob3I6IHtcbiAgICAgICAgc2VsZWN0OiB7IG5hbWU6IHRydWUsIGVtYWlsOiB0cnVlIH0sXG4gICAgICB9LFxuICAgIH0sXG4gIH0pO1xuICBjb25zdCBwb3N0ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShwb3N0UikpO1xuICByZXR1cm4ge1xuICAgIHByb3BzOiBwb3N0LFxuICB9O1xufTtcblxuYXN5bmMgZnVuY3Rpb24gcHVibGlzaFBvc3QoaWQ6IG51bWJlcik6IFByb21pc2U8dm9pZD4ge1xuICBhd2FpdCBmZXRjaChgL2FwaS9wdWJsaXNoLyR7aWR9YCwge1xuICAgIG1ldGhvZDogXCJQVVRcIixcbiAgfSk7XG4gIGF3YWl0IFJvdXRlci5wdXNoKFwiL1wiKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZGVsZXRlUG9zdChpZDogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiB7XG4gIGF3YWl0IGZldGNoKGAvYXBpL3Bvc3QvJHtpZH1gLCB7XG4gICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICB9KTtcbiAgUm91dGVyLnB1c2goXCIvXCIpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBlZGl0UG9zdChpZDogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiB7XG4gIC8vIGF3YWl0IGZldGNoKGAvYXBpL3Bvc3QvJHtpZH1gLCB7XG4gIC8vICAgbWV0aG9kOiBcIlBVVFwiLFxuICAvLyB9KTtcbiAgLy8gUm91dGVyLnB1c2goXCIvXCIpO1xuICBSb3V0ZXIucHVzaChgL2FwaS9wb3N0L2VkaXQvJHtpZH1gKTtcbn1cblxuY29uc3QgUG9zdDogUmVhY3QuRkM8UG9zdFByb3BzPiA9IChwcm9wcykgPT4ge1xuICBjb25zdCBbc2Vzc2lvbiwgbG9hZGluZ10gPSB1c2VTZXNzaW9uKCk7XG4gIGlmIChsb2FkaW5nKSB7XG4gICAgcmV0dXJuIDxkaXY+QXV0aGVudGljYXRpbmcgLi4uPC9kaXY+O1xuICB9XG4gIGNvbnN0IHVzZXJIYXNWYWxpZFNlc3Npb24gPSBCb29sZWFuKHNlc3Npb24pO1xuICBjb25zdCBwb3N0QmVsb25nc1RvVXNlciA9IHNlc3Npb24/LnVzZXI/LmVtYWlsID09PSBwcm9wcy5hdXRob3I/LmVtYWlsO1xuICBsZXQgdGl0bGUgPSBwcm9wcy50aXRsZTtcbiAgaWYgKCFwcm9wcy5wdWJsaXNoZWQpIHtcbiAgICB0aXRsZSA9IGAke3RpdGxlfSAoRHJhZnQpYDtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPExheW91dD5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxoMj57dGl0bGV9PC9oMj5cbiAgICAgICAgPHA+Qnkge3Byb3BzPy5hdXRob3I/Lm5hbWUgfHwgXCJVbmtub3duIGF1dGhvclwifTwvcD5cbiAgICAgICAgPFJlYWN0TWFya2Rvd24gc291cmNlPXtwcm9wcy5jb250ZW50fSAvPlxuICAgICAgICB7IXByb3BzLnB1Ymxpc2hlZCAmJiB1c2VySGFzVmFsaWRTZXNzaW9uICYmIHBvc3RCZWxvbmdzVG9Vc2VyICYmIChcbiAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IHB1Ymxpc2hQb3N0KHByb3BzLmlkKX0+UHVibGlzaDwvYnV0dG9uPlxuICAgICAgICApfVxuICAgICAgICB7dXNlckhhc1ZhbGlkU2Vzc2lvbiAmJiBwb3N0QmVsb25nc1RvVXNlciAmJiAoXG4gICAgICAgICAgPD5cbiAgICAgICAgICAgIHsvKiA8YnV0dG9uXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+XG4gICAgICAgICAgICAgICAgUm91dGVyLnB1c2goXCIvYXBpL3Bvc3QvZWRpdC9baWRdXCIsIGAvYXBpL3Bvc3QvZWRpdC8ke3Byb3BzLmlkfWApXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgRWRpdFxuICAgICAgICAgICAgPC9idXR0b24+ICovfVxuICAgICAgICAgICAgPExpbmsgaHJlZj17YC9hcGkvcG9zdC9lZGl0L3skcHJvcHMuaWR9YH0+XG4gICAgICAgICAgICAgIDxidXR0b24+RWRpdDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBkZWxldGVQb3N0KHByb3BzLmlkKX0+RGVsZXRlPC9idXR0b24+XG4gICAgICAgICAgPC8+XG4gICAgICAgICl9XG4gICAgICA8L2Rpdj5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLnBhZ2Uge1xuICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMjU1LCAwLCAwLjA1KTtcbiAgICAgICAgICBwYWRkaW5nOiAycmVtO1xuICAgICAgICB9XG5cbiAgICAgICAgLmFjdGlvbnMge1xuICAgICAgICAgIG1hcmdpbi10b3A6IDJyZW07XG4gICAgICAgIH1cblxuICAgICAgICBidXR0b24ge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICMwMGU2MDA7XG4gICAgICAgICAgLyogYm9yZGVyOiAwOyAqL1xuICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDAuMTI1cmVtO1xuICAgICAgICAgIHBhZGRpbmc6IDFyZW0gMnJlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJ1dHRvbiArIGJ1dHRvbiB7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L0xheW91dD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFBvc3Q7XG4iXX0= */\\n/*@ sourceURL=/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/pages/p/[id].tsx */\"));\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/yuki.t/Desktop/NextJSPractice/blogr-nextjs-prisma/pages/p/[id].tsx"],"names":["React","ReactMarkdown","Layout","Router","useSession","prisma","Link","getServerSideProps","params","postR","post","findUnique","where","id","Number","include","author","select","name","email","JSON","parse","stringify","props","publishPost","fetch","method","push","deletePost","editPost","Post","session","loading","userHasValidSession","Boolean","postBelongsToUser","user","title","published","content"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { GetServerSideProps } from \"next\";\nimport ReactMarkdown from \"react-markdown\";\nimport Layout from \"../../components/Layout\";\nimport Router from \"next/router\";\nimport { PostProps } from \"../../components/Post\";\nimport { useSession } from \"next-auth/client\";\nimport prisma from \"../../lib/prisma\";\nimport Link from \"next/link\";\n\nexport const getServerSideProps: GetServerSideProps = async ({ params }) => {\n  const postR = await prisma.post.findUnique({\n    where: {\n      id: Number(params?.id) || -1,\n    },\n    include: {\n      author: {\n        select: { name: true, email: true },\n      },\n    },\n  });\n  const post = JSON.parse(JSON.stringify(postR));\n  return {\n    props: post,\n  };\n};\n\nasync function publishPost(id: number): Promise<void> {\n  await fetch(`/api/publish/${id}`, {\n    method: \"PUT\",\n  });\n  await Router.push(\"/\");\n}\n\nasync function deletePost(id: number): Promise<void> {\n  await fetch(`/api/post/${id}`, {\n    method: \"DELETE\",\n  });\n  Router.push(\"/\");\n}\n\nasync function editPost(id: number): Promise<void> {\n  // await fetch(`/api/post/${id}`, {\n  //   method: \"PUT\",\n  // });\n  // Router.push(\"/\");\n  Router.push(`/api/post/edit/${id}`);\n}\n\nconst Post: React.FC<PostProps> = (props) => {\n  const [session, loading] = useSession();\n  if (loading) {\n    return <div>Authenticating ...</div>;\n  }\n  const userHasValidSession = Boolean(session);\n  const postBelongsToUser = session?.user?.email === props.author?.email;\n  let title = props.title;\n  if (!props.published) {\n    title = `${title} (Draft)`;\n  }\n\n  return (\n    <Layout>\n      <div>\n        <h2>{title}</h2>\n        <p>By {props?.author?.name || \"Unknown author\"}</p>\n        <ReactMarkdown source={props.content} />\n        {!props.published && userHasValidSession && postBelongsToUser && (\n          <button onClick={() => publishPost(props.id)}>Publish</button>\n        )}\n        {userHasValidSession && postBelongsToUser && (\n          <>\n            {/* <button\n              onClick={() =>\n                Router.push(\"/api/post/edit/[id]\", `/api/post/edit/${props.id}`)\n              }\n            >\n              Edit\n            </button> */}\n            <Link href={`/api/post/edit/{$props.id}`}>\n              <button>Edit</button>\n            </Link>\n            <button onClick={() => deletePost(props.id)}>Delete</button>\n          </>\n        )}\n      </div>\n      <style jsx>{`\n        .page {\n          background: rgba(0, 255, 0, 0.05);\n          padding: 2rem;\n        }\n\n        .actions {\n          margin-top: 2rem;\n        }\n\n        button {\n          background: #00e600;\n          /* border: 0; */\n          border: 1px solid black;\n          border-radius: 0.125rem;\n          padding: 1rem 2rem;\n        }\n\n        button + button {\n          margin-left: 1rem;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}